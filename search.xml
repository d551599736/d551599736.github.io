<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>抓狂！！github又连不上了，来款GitHub加速神器</title>
      <link href="/archives/fc698955.html"/>
      <url>/archives/fc698955.html</url>
      
        <content type="html"><![CDATA[<p>每次访问github的时候，有没有遇到过以下图片情况：</p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/d551599736/picgo@master/img/202308071814141.png"></p><h1 id="1-FastGithub"><a href="#1-FastGithub" class="headerlink" title="1.FastGithub"></a>1.FastGithub</h1><p>地址：<a href="https://github.com/dotnetcore/FastGithub">https://github.com/dotnetcore/FastGithub</a></p><p>github加速神器，解决github打不开、用户头像无法加载、releases无法上传下载、git-clone、git-pull、git-push失败等问题。</p><h3 id="1-写在前面"><a href="#1-写在前面" class="headerlink" title="1 写在前面"></a>1 写在前面</h3><ul><li><strong>fastgithub不具备“翻墙”功能,也没有相关的计划</strong></li><li><strong>fastgithub不支持Windows7等已被发行方停止支持的操作系统，并且也不会主动提供支持</strong></li><li><strong>fastgithub不能为您的游戏加速</strong></li><li><strong>fastgithub没有主动在github之外的任何渠道发布</strong></li></ul><h3 id="2-部署方式"><a href="#2-部署方式" class="headerlink" title="2 部署方式"></a>2 部署方式</h3><p>双击运行FastGithub.UI.exe</p><h3 id="3-软件功能"><a href="#3-软件功能" class="headerlink" title="3 软件功能"></a>3 软件功能</h3><ul><li>提供域名的纯净IP解析；</li><li>提供IP测速并选择最快的IP；</li><li>提供域名的tls连接自定义配置；</li><li>google的CDN资源替换，解决大量国外网站无法加载js和css的问题；</li></ul><h3 id="4-证书验证"><a href="#4-证书验证" class="headerlink" title="4 证书验证"></a>4 证书验证</h3><h4 id="4-1-git"><a href="#4-1-git" class="headerlink" title="4.1 git"></a>4.1 git</h4><p>git操作提示<code>SSL certificate problem</code><br>需要关闭git的证书验证：<code>git config --global http.sslverify false</code></p><h4 id="4-2-firefox"><a href="#4-2-firefox" class="headerlink" title="4.2 firefox"></a>4.2 firefox</h4><p>firefox提示<code>连接有潜在的安全问题</code><br>设置-&gt;隐私与安全-&gt;证书-&gt;查看证书-&gt;证书颁发机构，导入cacert&#x2F;fastgithub.cer，勾选“信任由此证书颁发机构来标识网站”</p><h3 id="5-安全性说明"><a href="#5-安全性说明" class="headerlink" title="5 安全性说明"></a>5 安全性说明</h3><p>FastGithub为每台不同的主机生成自颁发CA证书，保存在cacert文件夹下。客户端设备需要安装和无条件信任自颁发的CA证书，请不要将证书私钥泄露给他人，以免造成损失。</p><h3 id="6-合法性说明"><a href="#6-合法性说明" class="headerlink" title="6 合法性说明"></a>6 合法性说明</h3><p>《国际联网暂行规定》第六条规定：“计算机信息网络直接进行国际联网，必须使用邮电部国家公用电信网提供的国际出入口信道。任何单位和个人不得自行建立或者使用其他信道进行国际联网。” FastGithub本地代理使用的都是“公用电信网提供的国际出入口信道”，从国外Github服务器到国内用户电脑上FastGithub程序的流量，使用的是正常流量通道，其间未对流量进行任何额外加密（仅有网页原有的TLS加密，区别于VPN的流量加密），而FastGithub获取到网页数据之后发生的整个代理过程完全在国内，不再适用国际互联网相关之规定。</p><h1 id="2-Watt-Toolkit"><a href="#2-Watt-Toolkit" class="headerlink" title="2.Watt Toolkit"></a>2.Watt Toolkit</h1><p>使 Steam 社区、 GitHub 、谷歌验证码等国内难以访问的网页正常访问。功能类似 steamcommunit302 ，使用 Titanium-Web-Proxy 开源项目进行本地反代。</p><p>下载地址： <a href="https://steampp.net/">https://steampp.net/</a></p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/d551599736/picgo@master/img/202308071817930.png"></p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/d551599736/picgo@master/img/202308071818003.png"></p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/d551599736/picgo@master/img/202308071823639.png"></p>]]></content>
      
      
      <categories>
          
          <category> 工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> tools </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>有了FFmpeg，以后不需要付费视频剪辑了</title>
      <link href="/archives/fc6989f3.html"/>
      <url>/archives/fc6989f3.html</url>
      
        <content type="html"><![CDATA[<h1 id="ffmpeg安装"><a href="#ffmpeg安装" class="headerlink" title="ffmpeg安装"></a>ffmpeg安装</h1><p>1.官网下载：<a href="http://ffmpeg.org/">http://ffmpeg.org/</a></p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/d551599736/picgo@master/img/202308071540642.png"></p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/d551599736/picgo@master/img/202308071543880.png"></p><p>2.解压并进入bin目录，可以看到这三个文件</p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/d551599736/picgo@master/img/202308071544395.png"></p><p>3.设置环境变量</p><p>点击“系统属性-&gt;高级系统设置-&gt;环境变量-&gt;系统变量”，选择“Path”条目，点击“编辑-&gt;新建”，把第一步的<strong>bin文件夹路径</strong>复制粘贴进去，然后点击确定即可。</p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/d551599736/picgo@master/img/202308071546045.png"></p><p>输入命令“ffmpeg –version”，输出一下信息即安装成功！</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ffmpeg -i xx.mp4 #查看xx视频文件信息</span><br></pre></td></tr></table></figure><h1 id="痛点：无损压缩视频"><a href="#痛点：无损压缩视频" class="headerlink" title="痛点：无损压缩视频"></a>痛点：无损压缩视频</h1><p>无损压缩以下命令能解决：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ffmpeg -y -i xx.mp4 -c:a copy -c:v libx264 -profile:v high -r 30 -crf 30 -s 720x1080 xx-out.mp4</span><br></pre></td></tr></table></figure><p>针对以上问题，我的解决思路如下：<br>1、手机播放端一般不需要这么高分辨率，降低720p；<br>2、帧率30fps也可以适当降低，降低到22～25都可以；<br>3、码率压缩，选用-crf固定码率比压缩&#x2F;-b:v最高码率压缩方式都可以;<br>4、视频编码h264(main)可以调整到h264(high);<br>以上4个参数配置压缩命令如下：<br>ffmpeg -y -i xx.mp4 -c:a copy -c:v libx264 -profile:v high -r 30 -crf 30 -s 720x1080 xx-out.mp4<br>简单介绍参数：<br>-y :表示输出文件覆盖<br>-i :表示输入文件<br>-c:a :表示音频部分编码，copy表示直接复制到新文件<br>-c:v :表示视频部分编码，libx264表示使用h264编码<br>-profile:v :h264编码参数，使用更紧凑的压缩算法<br>-r :表示视频帧率，30fps<br>-crf :表示码率应用固定码率比，从0～500，越大码率越低，一般18～32效果较好<br>-s :视频分辨率裁剪，720x1080表示裁剪成720p</p><h1 id="痛点：转化格式"><a href="#痛点：转化格式" class="headerlink" title="痛点：转化格式"></a>痛点：转化格式</h1><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ffmpeg -i xx.webm -c:v libx264 -c:a aac -strict experimental xx.mp4</span><br></pre></td></tr></table></figure><p>在上面的命令中：</p><ul><li><p>input.webm 是输入文件的文件名</p></li><li><p>-c:v libx264 表示使用 H.264 编码器编码视频</p></li><li><p>-c:a aac 表示使用 AAC 编码器编码音频</p></li><li><p>-strict experimental 表示使用实验性的 AAC 编码器（如果不需要该选项，可以删除）</p></li><li><p>output.mp4 是输出文件的文件名</p><blockquote><p> 我这边需要将webm转为mp4格式，使用了</p><p>ffmpeg -hwaccel auto -y -i xxxx.webm -c:a aac  -b:v 10000k -profile:v high -r 30 -crf 30  -threads 16 xxxx.mp4</p></blockquote></li></ul><p>编码加速：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ffmpeg -hwaccels  #查看所支持的硬件加速方法</span><br><span class="line">ffmpeg -c:v h264_cuvid -i input.mp4 -c:v h264_nvenc output.mp4</span><br><span class="line">ffmpeg -hwaccel auto   #本人对音频编码并没有研究，这里我不指定硬件加速内容</span><br></pre></td></tr></table></figure><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/d551599736/picgo@master/img/202308091148335.png"></p><p>上图的<code>bitrate</code>就是<code>-b:v 10000k</code>编解码的配置结果，2039.2kbits&#x2F;s是默认情况下，需要手动加上参数-b:v ,码率越高，视频越高清。</p><h1 id="痛点：分离音频视频"><a href="#痛点：分离音频视频" class="headerlink" title="痛点：分离音频视频"></a>痛点：分离音频视频</h1><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ffmpeg  <span class="literal">-i</span> <span class="number">2</span>_6.mp4 <span class="literal">-vn</span> out.mp3 <span class="comment">#分离音频</span></span><br><span class="line">ffmpeg <span class="literal">-i</span> <span class="number">2</span>_6.mp4 <span class="literal">-an</span> out.mp4  <span class="comment">#分离视频</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>-i：input的缩写，表示其后要跟输入文件</p><p>-vn：video no的缩写，表示输出文件中不包含video数据</p><p>-an：audio no的缩写，表示输出文件中不包含audio数据</p><h1 id="痛点：截取音视频"><a href="#痛点：截取音视频" class="headerlink" title="痛点：截取音视频"></a>痛点：截取音视频</h1><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ffmpeg <span class="literal">-i</span> <span class="number">2</span>_6.mp4 <span class="literal">-ss</span> <span class="number">01</span>:<span class="number">00</span> <span class="literal">-t</span> <span class="number">120</span> out_2_6.mp4</span><br></pre></td></tr></table></figure><p><strong>-i</strong>：后面跟输入的文件，笔者此处为2_6_all.mp4</p><p><strong>-ss</strong>：指定开始的时间，时间格式为hour:minute:second，如00：01：00，表示从0时1分0秒开始截取，如果你截取的视频时间长度不超过1小时，最前面的0亦可以省略。</p><p><strong>-t</strong>：指定从开始截取的时间算，截取持续的时间，此处以**s(秒)**单位，如指定为120，则表示截取2分钟。</p><p>输出文件：指定输出文件的名称，笔者此处为out.mp4</p>]]></content>
      
      
      <categories>
          
          <category> 工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> tools </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Mysql索引底层数据结构与算法</title>
      <link href="/archives/fc6989f12.html"/>
      <url>/archives/fc6989f12.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      <categories>
          
          <category> 数据库 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> mysql </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>猫抓(cat-catch)以及ffmpeg 的应用</title>
      <link href="/archives/fc6989f20.html"/>
      <url>/archives/fc6989f20.html</url>
      
        <content type="html"><![CDATA[<h1 id="1-痛点：看到喜欢的视频怎么快速保存下来"><a href="#1-痛点：看到喜欢的视频怎么快速保存下来" class="headerlink" title="1.痛点：看到喜欢的视频怎么快速保存下来"></a>1.痛点：看到喜欢的视频怎么快速保存下来</h1><p>   假如通过录频软件保存下来，每个电脑只能录频一个视频，效率低！</p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/d551599736/picgo@master/img/202308062220719.png"></p><h1 id="2-猫抓下载"><a href="#2-猫抓下载" class="headerlink" title="2.猫抓下载"></a>2.猫抓下载</h1><p>猫抓是一款浏览器的插件，每个页面都可以把视频扒下来，支持chrome、firefox、edge。</p><h3 id="浏览器插件安装："><a href="#浏览器插件安装：" class="headerlink" title="浏览器插件安装："></a>浏览器插件安装：</h3><p>🐴Chrome</p><p><a href="https://chrome.google.com/webstore/detail/jfedfbgedapdagkghmgibemcoggfppbb">https://chrome.google.com/webstore/detail/jfedfbgedapdagkghmgibemcoggfppbb</a></p><p>🦄Edge</p><p><a href="https://microsoftedge.microsoft.com/addons/detail/oohmdefbjalncfplafanlagojlakmjci">https://microsoftedge.microsoft.com/addons/detail/oohmdefbjalncfplafanlagojlakmjci</a></p><blockquote><p> 居然没办法在线下载插件，禁止获取！！！</p></blockquote><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/d551599736/picgo@master/img/202308062226858.png"></p><p>🦊Firefox</p><p><a href="https://addons.mozilla.org/addon/cat-catch/">https://addons.mozilla.org/addon/cat-catch/</a> 😂我很荣幸和uBlock有一样的待遇 需非国区IP访问</p><h3 id="单独下载安装："><a href="#单独下载安装：" class="headerlink" title="单独下载安装："></a>单独下载安装：</h3><p>📘Chrome&#x2F;Edge等Chromium内核浏览器 源码加载方法</p><ol><li><a href="https://github.com/xifangczy/cat-catch/releases">https://github.com/xifangczy/cat-catch/releases</a> 下载 Source code 并解压。</li><li>扩展管理页面 打开 “开发者模式”。</li><li>点击 “加载已解压的扩展程序” 选中你解压好的目录即可。</li></ol><h1 id="3-猫抓安装与使用"><a href="#3-猫抓安装与使用" class="headerlink" title="3.猫抓安装与使用"></a>3.猫抓安装与使用</h1><p>下载完成之后，直接把crx包拖到管理插件程序页面，就直接安装完成！</p><p>设置：管理插件程序 》 开启 》固定开启 <img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/d551599736/picgo@master/img/202308062235027.png"></p><p>猫抓【当前页面】列表有四种情况： 1）获取到音频；2）不能获取到视频 ；3）</p><p>打开B站的视频网页，点击小猫图标，自动获取 有效 视频或者音频，如下图：</p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/d551599736/picgo@master/img/202308062225159.png"></p><p>下载视频</p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/d551599736/picgo@master/img/202308071607916.png"></p><p>下载好的文件，通过线上的ffmpeg工具，把2个文件合并成最终的视频文件</p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/d551599736/picgo@master/img/202308071612389.png"></p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/d551599736/picgo@master/img/GIF%202023-8-7%2016-10-37.gif"></p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/d551599736/picgo@master/img/202308071615207.png"></p><h1 id="4-还有一种简单方式-you-get"><a href="#4-还有一种简单方式-you-get" class="headerlink" title="4.还有一种简单方式:you-get"></a>4.还有一种简单方式:you-get</h1><p><strong>you-get安装需要以下依赖：</strong></p><ul><li><strong>Python</strong> 3.2及以上版本</li><li><strong>FFmpeg</strong> 1.0及以上版本</li></ul><p>1.通过<code>pip3 install you-get</code>命令安装you-get，如下图所示：</p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/d551599736/picgo@master/img/202308071837660.png"></p><p>2.安装you-get的过程中你可能会遇到红色的报错信息，在cmd命令行输入：<code>python -m pip install --upgrade pip</code> 更新pip管理包到最新版本即可</p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/d551599736/picgo@master/img/202308071837871.png"></p><ol start="3"><li><p>通过Python的pip管理包工具直接下载安装FFmpeg</p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/d551599736/picgo@master/img/202308071839999.png"></p></li><li><p>pip更新完之后，重新输入：<code>pip3 install you-get</code> 命令，安装you-get，如下图所示</p></li></ol><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/d551599736/picgo@master/img/202308071838246.png"></p><ol start="5"><li><p>you-get 常用命令</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">// 查看you-get版本</span><br><span class="line">you-get --version</span><br><span class="line">缩写：you-get -V</span><br><span class="line"></span><br><span class="line">// 查看帮助</span><br><span class="line">you-get --help</span><br><span class="line">缩写：you-get -h</span><br><span class="line"></span><br><span class="line">// 查看Web网站媒体资源信息</span><br><span class="line">you-get --info [url]</span><br><span class="line">缩写：you-get -i [url]  #不需要账号登录，就可以下载的视频</span><br><span class="line"></span><br><span class="line">// 下载Web网站媒体资源，默认以最高清晰度下载</span><br><span class="line">you-get [url]</span><br><span class="line"></span><br><span class="line">// 下载Web网站媒体资源，指定清晰度下载</span><br><span class="line">you-get --format=[资源清晰度] [url]</span><br><span class="line">缩写：you-get -F=[资源清晰度] [url]</span><br><span class="line"></span><br><span class="line">//配置cookies</span><br><span class="line">you-get --cookies=[COOKIES_FILE所在位置以及文件名] [url] #需要账号登录的cookies文件，比如：cookies.sqlite</span><br><span class="line">you-get --format=mp4hd3v2 --cookies=D:\cookies.sqlite https://v.youku.com/v_show/id_XNDc1OTk3NzQ2OA==.html?firsttime=0</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>​</p></li></ol>]]></content>
      
      
      <categories>
          
          <category> 工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> tools </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Explain详解与索引优化</title>
      <link href="/archives/fc6989f11.html"/>
      <url>/archives/fc6989f11.html</url>
      
        <content type="html"><![CDATA[<h1 id="Explain工具介绍"><a href="#Explain工具介绍" class="headerlink" title="Explain工具介绍"></a>Explain工具介绍</h1><p>使用EXPLAIN关键字可以模拟优化器执行SQL语句，分析你的查询语句或是结构的性能瓶颈，在 select 语句之前增加 explain 关键字 ，MySQL会在查询上设置一个标记，执行查询会返回执行计划的信息，而不是执行这条SQL</p><blockquote><p> 注意：如果 from 中包含子查询，仍会执行该子查询，将结果放入临时表中</p></blockquote><p><strong>Explain分析示例</strong></p><p>参考官方文档：<a href="https://dev.mysql.com/doc/refman/5.7/en/explain-output.html">https://dev.mysql.com/doc/refman/5.7/en/explain-output.html</a></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line">示例表：</span><br><span class="line"></span><br><span class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> IF <span class="keyword">EXISTS</span> `actor`;</span><br><span class="line"></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> `actor` (</span><br><span class="line"></span><br><span class="line">`id` <span class="type">int</span>(<span class="number">11</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span>,</span><br><span class="line"></span><br><span class="line">`name` <span class="type">varchar</span>(<span class="number">45</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span>,</span><br><span class="line"></span><br><span class="line">`update_time` datetime <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span>,</span><br><span class="line"></span><br><span class="line"><span class="keyword">PRIMARY</span> KEY (`id`)</span><br><span class="line"></span><br><span class="line">) ENGINE<span class="operator">=</span>InnoDB <span class="keyword">DEFAULT</span> CHARSET<span class="operator">=</span>utf8;</span><br><span class="line"></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `actor` (`id`, `name`, `update_time`) <span class="keyword">VALUES</span></span><br><span class="line">(<span class="number">1</span>,<span class="string">&#x27;a&#x27;</span>,<span class="string">&#x27;2017-12-22 15:27:18&#x27;</span>), (<span class="number">2</span>,<span class="string">&#x27;b&#x27;</span>,<span class="string">&#x27;2017-12-22 15:27:18&#x27;</span>),</span><br><span class="line">(<span class="number">3</span>,<span class="string">&#x27;c&#x27;</span>,<span class="string">&#x27;2017-12-22 15:27:18&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> IF <span class="keyword">EXISTS</span> `film`;</span><br><span class="line"></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> `film` (</span><br><span class="line"></span><br><span class="line">`id` <span class="type">int</span>(<span class="number">11</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> AUTO_INCREMENT,</span><br><span class="line"></span><br><span class="line">`name` <span class="type">varchar</span>(<span class="number">10</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span>,</span><br><span class="line"></span><br><span class="line"><span class="keyword">PRIMARY</span> KEY (`id`),</span><br><span class="line"></span><br><span class="line">KEY `idx_name` (`name`)</span><br><span class="line"></span><br><span class="line">) ENGINE<span class="operator">=</span>InnoDB <span class="keyword">DEFAULT</span> CHARSET<span class="operator">=</span>utf8;</span><br><span class="line"></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `film` (`id`, `name`) <span class="keyword">VALUES</span></span><br><span class="line">(<span class="number">3</span>,<span class="string">&#x27;film0&#x27;</span>),(<span class="number">1</span>,<span class="string">&#x27;film1&#x27;</span>),(<span class="number">2</span>,<span class="string">&#x27;film2&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> IF <span class="keyword">EXISTS</span> `film_actor`;</span><br><span class="line"></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> `film_actor` (</span><br><span class="line"></span><br><span class="line">`id` <span class="type">int</span>(<span class="number">11</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span>,</span><br><span class="line"></span><br><span class="line">`film_id` <span class="type">int</span>(<span class="number">11</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span>,</span><br><span class="line"></span><br><span class="line">`actor_id` <span class="type">int</span>(<span class="number">11</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span>,</span><br><span class="line"></span><br><span class="line">`remark` <span class="type">varchar</span>(<span class="number">255</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span>,</span><br><span class="line"></span><br><span class="line"><span class="keyword">PRIMARY</span> KEY (`id`),</span><br><span class="line"></span><br><span class="line">KEY `idx_film_actor_id` (`film_id`,`actor_id`)</span><br><span class="line"></span><br><span class="line">) ENGINE<span class="operator">=</span>InnoDB <span class="keyword">DEFAULT</span> CHARSET<span class="operator">=</span>utf8;</span><br><span class="line"></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `film_actor` (`id`, `film_id`, `actor_id`) <span class="keyword">VALUES</span></span><br><span class="line">(<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>),(<span class="number">2</span>,<span class="number">1</span>,<span class="number">2</span>),(<span class="number">3</span>,<span class="number">2</span>,<span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">mysql\<span class="operator">&gt;</span> explain <span class="keyword">select</span> \<span class="operator">*</span> <span class="keyword">from</span> actor;</span><br></pre></td></tr></table></figure><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/d551599736/picgo@master/img/20230806163412.png"></p><p>在查询中的每个表会输出一行，如果有两个表通过 join<br>连接查询，那么会输出两行</p><h2 id="explain-两个变种"><a href="#explain-两个变种" class="headerlink" title="explain 两个变种"></a>explain 两个变种</h2><p>1）<strong>explain extended</strong>：会在 explain <br>的基础上额外提供一些查询优化的信息。紧随其后通过 show warnings<br>命令可以得到优化后的查询语句，从而看出优化器优化了什么。额外还有<br>filtered 列，是一个百分比的值，rows * filtered&#x2F;100 可以<strong>估算</strong>出将要和<br>explain 中前一个表进行连接的行数（前一个表指 explain<br>中的id值比当前表id值小的表）。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql\<span class="operator">&gt;</span> explain extended <span class="keyword">select</span> \<span class="operator">*</span> <span class="keyword">from</span> film <span class="keyword">where</span> id <span class="operator">=</span> <span class="number">1</span>;</span><br></pre></td></tr></table></figure><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/d551599736/picgo@master/img/20230806163523.png"></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql\<span class="operator">&gt;</span> <span class="keyword">show</span> warnings;</span><br></pre></td></tr></table></figure><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/d551599736/picgo@master/img/20230806163616.png"></p><p>2）<strong>explain partitions</strong>：相比 explain 多了个 partitions<br>字段，如果查询是基于分区表的话，会显示查询将访问的分区。</p><h2 id="explain中的列"><a href="#explain中的列" class="headerlink" title="explain中的列"></a>explain中的列</h2><p>接下来我们将展示 explain 中每个列的信息。</p><p><strong>1. id列</strong></p><p>id列的编号是 select 的序列号，有几个 select 就有几个id，并且id的顺序是按<br>select 出现的顺序增长的。</p><p>id列越大执行优先级越高，id相同则从上往下执行，id为NULL最后执行。</p><p><strong>2. select_type列</strong></p><p>select_type 表示对应行是简单还是复杂的查询。</p><p>1）simple：简单查询。查询不包含子查询和union</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql\<span class="operator">&gt;</span> explain <span class="keyword">select</span> \<span class="operator">*</span> <span class="keyword">from</span> film <span class="keyword">where</span> id <span class="operator">=</span> <span class="number">2</span>;</span><br></pre></td></tr></table></figure><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/d551599736/picgo@master/img/20230806163704.png"></p><p>2）primary：复杂查询中最外层的 select</p><p>3）subquery：包含在 select 中的子查询（不在 from 子句中）</p><p>4）derived：包含在 from<br>子句中的子查询。MySQL会将结果存放在一个临时表中，也称为派生表（derived的英文含义）</p><p>用这个例子来了解 primary、subquery 和 derived 类型</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql\<span class="operator">&gt;</span> <span class="keyword">set</span> session optimizer_switch<span class="operator">=</span><span class="string">&#x27;derived_merge=off&#x27;</span>;</span><br></pre></td></tr></table></figure><p>#关闭mysql5.7新特性对衍生表的合并优化</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql\<span class="operator">&gt;</span> explain <span class="keyword">select</span> (<span class="keyword">select</span> <span class="number">1</span> <span class="keyword">from</span> actor <span class="keyword">where</span> id <span class="operator">=</span> <span class="number">1</span>) <span class="keyword">from</span> (<span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> film <span class="keyword">where</span> id <span class="operator">=</span> <span class="number">1</span>) der;</span><br></pre></td></tr></table></figure><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/d551599736/picgo@master/img/20230806163829.png"></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql\<span class="operator">&gt;</span> <span class="keyword">set</span> session optimizer_switch<span class="operator">=</span><span class="string">&#x27;derived_merge=on&#x27;</span>; #还原默认配置</span><br></pre></td></tr></table></figure><p>5）union：在 union 中的第二个和随后的 select</p><p>mysql&gt; explain select 1 union all select 1;</p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/d551599736/picgo@master/img/20230806163901.png"></p><p><strong>3. table列</strong></p><p>这一列表示 explain 的一行正在访问哪个表。</p><p>当 from 子句中有子查询时，table列是 &lt;derivenN&gt; 格式，表示当前查询依赖<br>id&#x3D;N 的查询，于是先执行 id&#x3D;N 的查询。</p><p>当有 union 时，UNION RESULT 的 table 列的值为&lt;union1,2&gt;，1和2表示参与<br>union 的 select 行id。</p><p><strong>4.partitions列</strong></p><p>如果查询是基于分区表的话，partitions 字段会显示查询将访问的分区。</p><p><strong>5. type列</strong></p><p>这一列表示<strong>关联类型或访问类型</strong>，即MySQL决定如何查找表中的行，查找数据行记录的大概范围。</p><p>依次从最优到最差分别为<strong>system &gt; const &gt; eq_ref &gt; ref &gt; range &gt; index &gt; ALL</strong></p><p>一般来说，<strong>得保证查询达到range级别，最好达到ref</strong></p><p><strong>NULL</strong>：mysql能够在优化阶段分解查询语句，在执行阶段用不着再访问表或索引。例如：在索引列中选取最小值，可以单独查找索引来完成，不需要在执行时访问表</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql\<span class="operator">&gt;</span> explain <span class="keyword">select</span> <span class="built_in">min</span>(id) <span class="keyword">from</span> film;</span><br></pre></td></tr></table></figure><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/d551599736/picgo@master/img/20230806164245.png"></p><p><strong>const,system</strong>：mysql能对查询的某部分进行优化并将其转化成一个常量（可以看show warnings 的结果）。用于 primary key 或 unique key<br>的所有列与常数比较时，所以表最多有一个匹配行，读取1次，速度比较快。<strong>system是const的特例</strong>，表里只有一条元组匹配时为system</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql <span class="operator">&gt;</span> explain extended <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> (<span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> film <span class="keyword">where</span> id<span class="operator">=</span> <span class="number">1</span>) tmp;</span><br></pre></td></tr></table></figure><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/d551599736/picgo@master/img/202308061645438.png"></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql\<span class="operator">&gt;</span> <span class="keyword">show</span> warnings;</span><br></pre></td></tr></table></figure><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/d551599736/picgo@master/img/202308061648094.png"></p><p><strong>eq_ref</strong>：primary key 或 unique key 索引的所有部分被连接使用<br>，最多只会返回一条符合条件的记录。这可能是在 const<br>之外最好的联接类型了，简单的 select 查询不会出现这种 type。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> explain <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> film_actor <span class="keyword">left</span> <span class="keyword">join</span> film <span class="keyword">on</span> film_actor.film_id <span class="operator">=</span> film.id;</span><br></pre></td></tr></table></figure><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/d551599736/picgo@master/img/202308061649339.png"></p><p><strong>ref</strong>：相比 eq_ref，不使用唯一索引，而是使用普通索引或者唯一性索引的部分前缀，索引要和某个值相比较，可能会找到多个符合条件的行。</p><p>1. 简单 select 查询，name是普通索引（非唯一索引）</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> explain <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> film <span class="keyword">where</span> name <span class="operator">=</span> <span class="string">&#x27;film1&#x27;</span>;</span><br></pre></td></tr></table></figure><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/d551599736/picgo@master/img/202308061650812.png"></p><p>2.关联表查询，idx_film_actor_id是film_id和actor_id的联合索引，这里使用到了film_actor的左边前缀film_id部分。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> explain <span class="keyword">select</span> film_id <span class="keyword">from</span> film <span class="keyword">left</span> <span class="keyword">join</span> film_actor <span class="keyword">on</span> film.id <span class="operator">=</span> film_actor.film_id;</span><br></pre></td></tr></table></figure><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/d551599736/picgo@master/img/202308061651318.png"></p><p><strong>range</strong>：范围扫描通常出现在 in(), between ,&gt; ,&lt;, &gt;&#x3D;<br>等操作中。使用一个索引来检索给定范围的行。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> explain <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> actor <span class="keyword">where</span> id <span class="operator">&gt;</span> <span class="number">1</span>;</span><br></pre></td></tr></table></figure><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/d551599736/picgo@master/img/202308061651940.png"></p><p><strong>index</strong>：扫描全索引就能拿到结果，一般是扫描某个二级索引，这种扫描不会从索引树根节点开始快速查找，而是直接对二级索引的叶子节点遍历和扫描，速度还是比较慢的，这种查询一般为使用覆盖索引，二级索引一般比较小，所以这种通常比ALL快一些。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> explain <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> film;</span><br></pre></td></tr></table></figure><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/d551599736/picgo@master/img/202308061652539.png"></p><p><strong>ALL</strong>：即全表扫描，扫描你的聚簇索引的所有叶子节点。通常情况下这需要增加索引来进行优化了。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> explain <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> actor;</span><br></pre></td></tr></table></figure><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/d551599736/picgo@master/img/202308061653581.png"></p><p><strong>6. possible_keys列</strong></p><p>这一列显示查询可能使用哪些索引来查找。 </p><p>explain 时可能出现 possible_keys 有列，而 key 显示 NULL的情况，这种情况是因为表中数据不多，mysql认为索引对此查询帮助不大，选择了全表查询。 </p><p>如果该列是NULL，则没有相关的索引。在这种情况下，可以通过检查 where<br>子句看是否可以创造一个适当的索引来提高查询性能，然后用 explain查看效果。</p><p><strong>7. key列</strong></p><p>这一列显示mysql实际采用哪个索引来优化对该表的访问。</p><p>如果没有使用索引，则该列是NULL。如果想强制mysql使用或忽视possible_keys列中的索引，在查询中使用force index、ignore index。</p><p><strong>8. key_len列</strong></p><p>这一列显示了mysql在索引里使用的字节数，通过这个值可以算出具体使用了索引中的哪些列。 </p><p>举例来说，film_actor的联合索引 idx_film_actor_id 由 film_id 和 actor_id<br>两个int列组成，并且每个int是4字节。通过结果中的key_len&#x3D;4可推断出查询使用了第一个列：film_id列来执行索引查找。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> explain <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> film_actor <span class="keyword">where</span> film_id <span class="operator">=</span> <span class="number">2</span>;</span><br></pre></td></tr></table></figure><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/d551599736/picgo@master/img/202308061653701.png"></p><p>key_len计算规则如下：</p><ul><li><p><strong>字符串</strong>: char(n)和varchar(n)，5.0.3以后版本中，n均代表字符数，而不是字节数，如果是utf-8，一个[数字或字母占1个字节，一个汉字占3个字节</p><p>char(n)：如果存汉字长度就是 3n 字节</p><p>varchar(n)：如果存汉字则长度是 3n + 2字节，加的2字节用来存储字符串长度，因为varchar是变长字符串</p></li><li><p><strong>数值类型</strong></p><p>tinyint：1字节</p><p>smallint：2字节</p><p>int：4字节</p><p>bigint：8字节　　</p></li><li><p><strong>时间类型</strong>　</p><p>date：3字节</p><p>timestamp：4字节</p><p>datetime：8字节</p></li><li><p>如果字段允许为 NULL，需要1字节记录是否为 NULL</p><p>索引最大长度是768字节，当字符串过长时，mysql会做一个类似左前缀索引的处理，将前半部分的字符提取出来做索引。</p><p><strong>9. ref列</strong></p><p>这一列显示了在key列记录的索引中，表查找值所用到的列或常量，常见的有：const（常量），字段名（例：film.id）</p><p><strong>10. rows列</strong></p><p>这一列是mysql估计要读取并检测的行数，注意这个不是结果集里的行数。</p><p><strong>11.filtered 列</strong></p><p>该列是一个百分比的值，rows * filtered&#x2F;100 可以估算出将要和 explain 中前一个表进行连接的行数（前一个表指explain 中的id值比当前表id值小的表）。</p><p><strong>12. Extra列</strong></p><p>这一列展示的是额外信息。常见的重要值如下： </p><p>1）<strong>Using index</strong>：使用覆盖索引</p><p><strong>覆盖索引定义</strong>：mysql执行计划explain结果里的key有使用索引，如果select后面查询的字段都可以从这个索引的树中获取，这种情况一般可以说是用到了覆盖索引，extra里一般都有using index；覆盖索引一般针对的是辅助索引，整个查询结果只通过辅助索引就能拿到结果，不需要通过辅助索引树找到主键，再通过主键去主键索引树里获取其它字段值</p></li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> explain <span class="keyword">select</span> film_id <span class="keyword">from</span> film_actor <span class="keyword">where</span> film_id <span class="operator">=</span> <span class="number">1</span>;</span><br></pre></td></tr></table></figure><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/d551599736/picgo@master/img/202308061658986.png"></p><p>2）<strong>Using where</strong>：使用 where 语句来处理结果，并且查询的列未被索引覆盖</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> explain <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> actor <span class="keyword">where</span> name <span class="operator">=</span> <span class="string">&#x27;a&#x27;</span>;</span><br></pre></td></tr></table></figure><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/d551599736/picgo@master/img/202308061659167.png"></p><p>3）<strong>Using index condition</strong>：查询的列不完全被索引覆盖，where条件中是一个前导列的范围；</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> explain <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> film_actor <span class="keyword">where</span> film_id <span class="operator">&gt;</span> <span class="number">1</span>;</span><br></pre></td></tr></table></figure><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/d551599736/picgo@master/img/202308061659608.png"></p><p>4）<strong>Using temporary</strong>：mysql需要创建一张临时表来处理查询。出现这种情况一般是要进行优化的，首先是想到用索引来优化。</p><p>1. actor.name没有索引，此时创建了张临时表来distinct</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> explain <span class="keyword">select</span> <span class="keyword">distinct</span> name <span class="keyword">from</span> actor;</span><br></pre></td></tr></table></figure><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/d551599736/picgo@master/img/202308061700903.png"></p><p>2. film.name建立了idx_name索引，此时查询时extra是using<br>index,没有用临时表</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> explain <span class="keyword">select</span> <span class="keyword">distinct</span> name <span class="keyword">from</span> film;</span><br></pre></td></tr></table></figure><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/d551599736/picgo@master/img/202308061700406.png"></p><p>5）<strong>Using filesort</strong>：将用外部排序而不是索引排序，数据较小时从内存排序，否则需要在磁盘完成排序。这种情况下一般也是要考虑使用索引来优化的。</p><p>1.actor.name未创建索引，会浏览actor整个表，保存排序关键字name和对应的id，然后排序name并检索行记录</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> explain <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> actor <span class="keyword">order</span> <span class="keyword">by</span> name;</span><br></pre></td></tr></table></figure><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/d551599736/picgo@master/img/202308061700104.png"></p><p>2. film.name建立了idx_name索引,此时查询时extra是using index</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> explain <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> film <span class="keyword">order</span> <span class="keyword">by</span> name;</span><br></pre></td></tr></table></figure><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/d551599736/picgo@master/img/202308061701078.png"></p><p>6）<strong>Select tables optimized away</strong>：使用某些聚合函数（比如<br>max、min）来访问存在索引的某个字段是下图显示。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> explain <span class="keyword">select</span> <span class="built_in">min</span>(id) <span class="keyword">from</span> film;</span><br></pre></td></tr></table></figure><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/d551599736/picgo@master/img/202308061716390.png"></p><h1 id="索引最佳实践"><a href="#索引最佳实践" class="headerlink" title="索引最佳实践"></a>索引最佳实践</h1><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">示例表：</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> `employees` (</span><br><span class="line">  `id` <span class="type">int</span>(<span class="number">11</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> AUTO_INCREMENT,</span><br><span class="line">  `name` <span class="type">varchar</span>(<span class="number">24</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">&#x27;&#x27;</span> COMMENT <span class="string">&#x27;姓名&#x27;</span>,</span><br><span class="line">  `age` <span class="type">int</span>(<span class="number">11</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">&#x27;0&#x27;</span> COMMENT <span class="string">&#x27;年龄&#x27;</span>,</span><br><span class="line">  `position` <span class="type">varchar</span>(<span class="number">20</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">&#x27;&#x27;</span> COMMENT <span class="string">&#x27;职位&#x27;</span>,</span><br><span class="line">  `hire_time` <span class="type">timestamp</span> <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="built_in">CURRENT_TIMESTAMP</span> COMMENT <span class="string">&#x27;入职时间&#x27;</span>,</span><br><span class="line">  <span class="keyword">PRIMARY</span> KEY (`id`),</span><br><span class="line">  KEY `idx_name_age_position` (`name`,`age`,`position`) <span class="keyword">USING</span> BTREE</span><br><span class="line">) ENGINE<span class="operator">=</span>InnoDB AUTO_INCREMENT<span class="operator">=</span><span class="number">4</span> <span class="keyword">DEFAULT</span> CHARSET<span class="operator">=</span>utf8 COMMENT<span class="operator">=</span><span class="string">&#x27;员工记录表&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> employees(name,age,position,hire_time) <span class="keyword">VALUES</span>(<span class="string">&#x27;LiLei&#x27;</span>,<span class="number">22</span>,<span class="string">&#x27;manager&#x27;</span>,NOW());</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> employees(name,age,position,hire_time) <span class="keyword">VALUES</span>(<span class="string">&#x27;HanMeimei&#x27;</span>, <span class="number">23</span>,<span class="string">&#x27;dev&#x27;</span>,NOW());</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> employees(name,age,position,hire_time) <span class="keyword">VALUES</span>(<span class="string">&#x27;Lucy&#x27;</span>,<span class="number">23</span>,<span class="string">&#x27;dev&#x27;</span>,NOW());</span><br></pre></td></tr></table></figure><h2 id="1-全值匹配"><a href="#1-全值匹配" class="headerlink" title="1.全值匹配"></a>1.全值匹配</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">EXPLAIN <span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> employees <span class="keyword">WHERE</span> name<span class="operator">=</span> <span class="string">&#x27;LiLei&#x27;</span>;</span><br></pre></td></tr></table></figure><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/d551599736/picgo@master/img/202308061717753.png"></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">EXPLAIN <span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> employees <span class="keyword">WHERE</span> name<span class="operator">=</span> <span class="string">&#x27;LiLei&#x27;</span> <span class="keyword">AND</span> age <span class="operator">=</span> <span class="number">22</span>;</span><br></pre></td></tr></table></figure><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/d551599736/picgo@master/img/202308061718893.png"></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">EXPLAIN <span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> employees <span class="keyword">WHERE</span>  name<span class="operator">=</span> <span class="string">&#x27;LiLei&#x27;</span> <span class="keyword">AND</span>  age <span class="operator">=</span> <span class="number">22</span> <span class="keyword">AND</span> position <span class="operator">=</span><span class="string">&#x27;manager&#x27;</span>;</span><br></pre></td></tr></table></figure><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/d551599736/picgo@master/img/202308061719154.png"></p><h2 id="2-最左前缀法则"><a href="#2-最左前缀法则" class="headerlink" title="2.最左前缀法则"></a>2.最左前缀法则</h2><p>如果索引了多列，要遵守最左前缀法则。指的是查询从索引的最左前列开始并且不跳过索引中的列。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">EXPLAIN <span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> employees <span class="keyword">WHERE</span> name <span class="operator">=</span> <span class="string">&#x27;Bill&#x27;</span> <span class="keyword">and</span> age <span class="operator">=</span> <span class="number">31</span>;</span><br><span class="line">EXPLAIN <span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> employees <span class="keyword">WHERE</span> age <span class="operator">=</span> <span class="number">30</span> <span class="keyword">AND</span> position <span class="operator">=</span> <span class="string">&#x27;dev&#x27;</span>;</span><br><span class="line">EXPLAIN <span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> employees <span class="keyword">WHERE</span> position <span class="operator">=</span> <span class="string">&#x27;manager&#x27;</span>;</span><br></pre></td></tr></table></figure><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/d551599736/picgo@master/img/202308061719305.png"></p><h2 id="3-不在索引列上做任何操作（计算、函数、（自动or手动）类型转换），会导致索引失效而转向全表扫描"><a href="#3-不在索引列上做任何操作（计算、函数、（自动or手动）类型转换），会导致索引失效而转向全表扫描" class="headerlink" title="3.不在索引列上做任何操作（计算、函数、（自动or手动）类型转换），会导致索引失效而转向全表扫描"></a>3.不在索引列上做任何操作（计算、函数、（自动or手动）类型转换），会导致索引失效而转向全表扫描</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">EXPLAIN <span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> employees <span class="keyword">WHERE</span> name <span class="operator">=</span> <span class="string">&#x27;LiLei&#x27;</span>;</span><br><span class="line">EXPLAIN <span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> employees <span class="keyword">WHERE</span> <span class="keyword">left</span>(name,<span class="number">3</span>) <span class="operator">=</span> <span class="string">&#x27;LiLei&#x27;</span>;</span><br></pre></td></tr></table></figure><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/d551599736/picgo@master/img/202308061720733.png"></p><p>给hire_time增加一个普通索引：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> `employees` <span class="keyword">ADD</span> INDEX `idx_hire_time` (`hire_time`) <span class="keyword">USING</span> BTREE ;</span><br><span class="line">EXPLAIN  <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> employees <span class="keyword">where</span> <span class="type">date</span>(hire_time) <span class="operator">=</span><span class="string">&#x27;2018-09-30&#x27;</span>;</span><br></pre></td></tr></table></figure><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/d551599736/picgo@master/img/202308061721213.png"></p><p>转化为日期范围查询，有可能会走索引：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">EXPLAIN  <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> employees <span class="keyword">where</span> hire_time <span class="operator">&gt;=</span><span class="string">&#x27;2018-09-30 00:00:00&#x27;</span>  <span class="keyword">and</span>  hire_time <span class="operator">&lt;=</span><span class="string">&#x27;2018-09-30 23:59:59&#x27;</span>;</span><br></pre></td></tr></table></figure><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/d551599736/picgo@master/img/202308061721476.png"></p><p>还原最初索引状态</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> `employees` <span class="keyword">DROP</span> INDEX `idx_hire_time`;</span><br></pre></td></tr></table></figure><h2 id="4-存储引擎不能使用索引中范围条件右边的列"><a href="#4-存储引擎不能使用索引中范围条件右边的列" class="headerlink" title="4.存储引擎不能使用索引中范围条件右边的列"></a>4.存储引擎不能使用索引中范围条件右边的列</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">EXPLAIN <span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> employees <span class="keyword">WHERE</span> name<span class="operator">=</span> <span class="string">&#x27;LiLei&#x27;</span> <span class="keyword">AND</span> age <span class="operator">=</span> <span class="number">22</span> <span class="keyword">AND</span> position <span class="operator">=</span><span class="string">&#x27;manager&#x27;</span>;</span><br><span class="line">EXPLAIN <span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> employees <span class="keyword">WHERE</span> name<span class="operator">=</span> <span class="string">&#x27;LiLei&#x27;</span> <span class="keyword">AND</span> age <span class="operator">&gt;</span> <span class="number">22</span> <span class="keyword">AND</span> position <span class="operator">=</span><span class="string">&#x27;manager&#x27;</span>;</span><br></pre></td></tr></table></figure><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/d551599736/picgo@master/img/202308061722537.png"></p><h2 id="5-尽量使用覆盖索引（只访问索引的查询（索引列包含查询列）），减少select-语句"><a href="#5-尽量使用覆盖索引（只访问索引的查询（索引列包含查询列）），减少select-语句" class="headerlink" title="5.尽量使用覆盖索引（只访问索引的查询（索引列包含查询列）），减少select * 语句"></a>5.尽量使用覆盖索引（只访问索引的查询（索引列包含查询列）），减少select * 语句</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">EXPLAIN <span class="keyword">SELECT</span> name,age <span class="keyword">FROM</span> employees <span class="keyword">WHERE</span> name<span class="operator">=</span> <span class="string">&#x27;LiLei&#x27;</span> <span class="keyword">AND</span> age <span class="operator">=</span> <span class="number">23</span> <span class="keyword">AND</span> position <span class="operator">=</span><span class="string">&#x27;manager&#x27;</span>;</span><br></pre></td></tr></table></figure><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/d551599736/picgo@master/img/202308061723937.png"></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">EXPLAIN <span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> employees <span class="keyword">WHERE</span> name<span class="operator">=</span> <span class="string">&#x27;LiLei&#x27;</span> <span class="keyword">AND</span> age <span class="operator">=</span> <span class="number">23</span> <span class="keyword">AND</span> position <span class="operator">=</span><span class="string">&#x27;manager&#x27;</span>;</span><br></pre></td></tr></table></figure><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/d551599736/picgo@master/img/202308061724004.png"></p><h2 id="6-mysql在使用不等于（！-或者），-not-in-，not-exists的时候无法使用索引会导致全表扫描"><a href="#6-mysql在使用不等于（！-或者），-not-in-，not-exists的时候无法使用索引会导致全表扫描" class="headerlink" title="6.mysql在使用不等于（！&#x3D;或者&lt;&gt;），[not in ，not exists的时候无法使用索引会导致全表扫描"></a>6.mysql在使用不等于（！&#x3D;或者&lt;&gt;），[not in ，not exists的时候无法使用索引会导致全表扫描</h2><p><strong>&lt; 小于、 &gt; 大于、&lt;&#x3D;、&gt;&#x3D;这些，mysql内部优化器会根据检索比例、表大小等多个因素整体评估是否使用索引</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">EXPLAIN <span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> employees <span class="keyword">WHERE</span> name <span class="operator">!=</span> <span class="string">&#x27;LiLei&#x27;</span>;</span><br></pre></td></tr></table></figure><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/d551599736/picgo@master/img/202308061725866.png"></p><h2 id="7-is-null-is-not-null-一般情况下也无法使用索引"><a href="#7-is-null-is-not-null-一般情况下也无法使用索引" class="headerlink" title="7.is null,is not null 一般情况下也无法使用索引"></a>7.is null,is not null 一般情况下也无法使用索引</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">EXPLAIN <span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> employees <span class="keyword">WHERE</span> name <span class="keyword">is</span> <span class="keyword">null</span></span><br></pre></td></tr></table></figure><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/d551599736/picgo@master/img/202308061725032.png"></p><h2 id="8-like以通配符开头（’-abc-’）mysql索引失效会变成全表扫描操作"><a href="#8-like以通配符开头（’-abc-’）mysql索引失效会变成全表扫描操作" class="headerlink" title="8.like以通配符开头（’$abc...’）mysql索引失效会变成全表扫描操作"></a>8.like以通配符开头（’$abc...’）mysql索引失效会变成全表扫描操作</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">EXPLAIN <span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> employees <span class="keyword">WHERE</span> name <span class="keyword">like</span> <span class="string">&#x27;%Lei&#x27;</span></span><br></pre></td></tr></table></figure><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/d551599736/picgo@master/img/202308061726842.png"></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">EXPLAIN <span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> employees <span class="keyword">WHERE</span> name <span class="keyword">like</span> <span class="string">&#x27;Lei%&#x27;</span></span><br></pre></td></tr></table></figure><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/d551599736/picgo@master/img/202308061726042.png"></p><p>问题：解决like’%字符串%’索引不被使用的方法？</p><p>a）使用覆盖索引，查询字段必须是建立覆盖索引字段</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">EXPLAIN <span class="keyword">SELECT</span> name,age,position <span class="keyword">FROM</span> employees <span class="keyword">WHERE</span> name <span class="keyword">like</span> <span class="string">&#x27;%Lei%&#x27;</span>;</span><br></pre></td></tr></table></figure><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/d551599736/picgo@master/img/202308061727799.png"></p><p>b）如果不能使用覆盖索引则可能需要借助搜索引擎</p><h2 id="9-字符串不加单引号索引失效"><a href="#9-字符串不加单引号索引失效" class="headerlink" title="9.字符串不加单引号索引失效"></a>9.字符串不加单引号索引失效</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">EXPLAIN <span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> employees <span class="keyword">WHERE</span> name <span class="operator">=</span> <span class="string">&#x27;1000&#x27;</span>;</span><br><span class="line">EXPLAIN <span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> employees <span class="keyword">WHERE</span> name <span class="operator">=</span> <span class="number">1000</span>;</span><br></pre></td></tr></table></figure><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/d551599736/picgo@master/img/202308061727991.png"></p><h2 id="10-少用or或in，用它查询时，mysql不一定使用索引，mysql内部优化器会根据检索比例、表大小等多个因素整体评估是否使用索引，详见范围查询优化"><a href="#10-少用or或in，用它查询时，mysql不一定使用索引，mysql内部优化器会根据检索比例、表大小等多个因素整体评估是否使用索引，详见范围查询优化" class="headerlink" title="10.少用or或in，用它查询时，mysql不一定使用索引，mysql内部优化器会根据检索比例、表大小等多个因素整体评估是否使用索引，详见范围查询优化"></a>10.少用or或in，用它查询时，mysql不一定使用索引，mysql内部优化器会根据检索比例、表大小等多个因素整体评估是否使用索引，详见范围查询优化</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">EXPLAIN <span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> employees <span class="keyword">WHERE</span> name <span class="operator">=</span> <span class="string">&#x27;LiLei&#x27;</span> <span class="keyword">or</span> name <span class="operator">=</span> <span class="string">&#x27;HanMeimei&#x27;</span>;</span><br></pre></td></tr></table></figure><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/d551599736/picgo@master/img/202308061728924.png"></p><h2 id="11-范围查询优化"><a href="#11-范围查询优化" class="headerlink" title="11.范围查询优化"></a>11.范围查询优化</h2><p>给年龄添加单值索引</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> `employees` <span class="keyword">ADD</span> INDEX `idx_age` (`age`) <span class="keyword">USING</span> BTREE ;</span><br><span class="line">explain <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> employees <span class="keyword">where</span> age <span class="operator">&gt;=</span><span class="number">1</span> <span class="keyword">and</span> age <span class="operator">&lt;=</span><span class="number">2000</span>;</span><br></pre></td></tr></table></figure><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/d551599736/picgo@master/img/202308061728901.png"></p><p>没走索引原因：mysql内部优化器会根据检索比例、表大小等多个因素整体评估是否使用索引。比如这个例子，可能是由于单次数据量查询过大导致优化器最终选择不走索引</p><p>优化方法：可以将大的范围拆分成多个小范围</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">explain <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> employees <span class="keyword">where</span> age <span class="operator">&gt;=</span><span class="number">1</span> <span class="keyword">and</span> age <span class="operator">&lt;=</span><span class="number">1000</span>;</span><br><span class="line">explain <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> employees <span class="keyword">where</span> age <span class="operator">&gt;=</span><span class="number">1001</span> <span class="keyword">and</span> age <span class="operator">&lt;=</span><span class="number">2000</span>;</span><br></pre></td></tr></table></figure><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/d551599736/picgo@master/img/202308061729858.png"></p><p>还原最初索引状态</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> `employees` <span class="keyword">DROP</span> INDEX `idx_age`;</span><br></pre></td></tr></table></figure><h2 id="12-索引使用总结"><a href="#12-索引使用总结" class="headerlink" title="12.索引使用总结"></a>12.索引使用总结</h2><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/d551599736/picgo@master/img/202308061730917.png"></p><p>like KK%相当于&#x3D;常量，%KK和%KK% 相当于范围</p>]]></content>
      
      
      <categories>
          
          <category> 数据库 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> mysql </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Mysql8以及5.7centos安装</title>
      <link href="/archives/fc6989f10.html"/>
      <url>/archives/fc6989f10.html</url>
      
        <content type="html"><![CDATA[<h1 id="1-Mysql-5-7-安装参考步骤"><a href="#1-Mysql-5-7-安装参考步骤" class="headerlink" title="1.Mysql 5.7 安装参考步骤"></a>1.Mysql 5.7 安装参考步骤</h1><h2 id="卸载MariaDB"><a href="#卸载MariaDB" class="headerlink" title="卸载MariaDB"></a>卸载MariaDB</h2><p>在CentOS中默认安装有MariaDB，是MySQL的一个分支，主要由开源社区维护。</p><p>CentOS 7及以上版本已经不再使用MySQL数据库，而是使用MariaDB数据库。</p><p>如果直接安装MySQL，会和MariaDB的文件冲突。</p><p>因此，需要先卸载自带的MariaDB，再安装MySQL。</p><p>1.1 查看版本：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rpm -qa|grep mariadb</span><br></pre></td></tr></table></figure><p>1.2 卸载</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rpm -e --nodeps 文件名</span><br></pre></td></tr></table></figure><p>1.3 检查是否卸载干净：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rpm -qa|grep mariadb</span><br></pre></td></tr></table></figure><h2 id="安装mysql"><a href="#安装mysql" class="headerlink" title="安装mysql"></a>安装mysql</h2><p>1.下载mysql 5.7</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]# wget http://mirrors.sohu.com/mysql/MySQL-5.7/mysql-5.7.17-linux-glibc2.5-x86_64.tar.gz</span><br></pre></td></tr></table></figure><p>检查是否本地已经安装了mysql</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rpm -qa | grep mysql</span><br></pre></td></tr></table></figure><p>卸载以前的mysql</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rpm -e 已经存在的MySQL全名</span><br></pre></td></tr></table></figure><p>2.解压文件</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]# tar -zxvf mysql-5.7.17-linux-glibc2.5-x86_64.tar.gz -C /usr/local/</span><br></pre></td></tr></table></figure><p>文件名修改为mysql：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost local]# mv mysql-5.7.17-linux-glibc2.5-x86_64/ mysql</span><br></pre></td></tr></table></figure><p>3.配置启动文件</p><p>​1、然后去到mysql的support-files目录下,复制my.cnf到 &#x2F;etc&#x2F;my.cnf(mysqld启动时自动读取)</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost local]# cd mysql/support-files/</span><br><span class="line">[root@localhost support-files]# cp my-default.cnf /etc/my.cnf</span><br><span class="line">cp: overwrite &#x27;/etc/my.cnf&#x27;?  yes</span><br></pre></td></tr></table></figure><blockquote><p>注意：如果你在安装时Linux虚拟机时同时安装了默认的mysql，此时操作以上步骤，终端将会提示你文件已存在是否覆盖，输入yes覆盖即可。</p></blockquote><p>​2、配置数据库编码</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost support-files]# vim /etc/my.cnf</span><br></pre></td></tr></table></figure><p>​添加以下内容:</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[<span class="string">mysql</span>]</span><br><span class="line"><span class="string">default-character-set=utf8</span></span><br><span class="line"></span><br><span class="line">[<span class="string">mysqld</span>]</span><br><span class="line"><span class="string">default-storage-engine=INNODB</span></span><br><span class="line"><span class="string">character_set_server=utf8</span></span><br></pre></td></tr></table></figure><p>​3、复制mysql.server到&#x2F;etc&#x2F;init.d&#x2F;目录下(目的想实现开机自动执行效果)</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost support-files]# cp mysql.server /etc/init.d/mysql</span><br></pre></td></tr></table></figure><p>​4、修改&#x2F;etc&#x2F;init.d&#x2F;mysql参数</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost support-files]# vim /etc/init.d/mysql</span><br></pre></td></tr></table></figure><p>修改以下内容:</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">basedir=/usr/local/mysql</span></span><br><span class="line"><span class="string">datadir=/usr/local/mysql/data</span></span><br></pre></td></tr></table></figure><h2 id="用户和用户组"><a href="#用户和用户组" class="headerlink" title="用户和用户组"></a>用户和用户组</h2><p>1、出于安全便利，创建一个操作数据库的专门用户</p><p>建立一个mysql的组:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost support-files]# groupadd mysql</span><br></pre></td></tr></table></figure><p>建立mysql用户，并且把用户放到mysql组:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost support-files]# useradd -r -g mysql mysql</span><br></pre></td></tr></table></figure><p>给mysql用户设置一个密码:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost support-files]# passwd mysql</span><br></pre></td></tr></table></figure><p>给目录&#x2F;usr&#x2F;local&#x2F;mysql 更改拥有者:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost support-files]# chown -R mysql:mysql /usr/local/mysql/</span><br></pre></td></tr></table></figure><h2 id="初始化MySQL"><a href="#初始化MySQL" class="headerlink" title="初始化MySQL"></a>初始化MySQL</h2><p>1.初始化 mysql 的数据库</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost support-files]# cd /usr/local/mysql/bin/</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost bin]# ./mysqld --initialize --user=mysql --basedir=/usr/local/mysql --datadir=/usr/local/mysql/data</span><br></pre></td></tr></table></figure><p>初始化后会生成一个临时密码 root@localhost:：*(最好先记录这个临时密码)</p><p>2、给数据库加密</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost bin]# ./mysql_ssl_rsa_setup --datadir=/usr/local/mysql/data</span><br></pre></td></tr></table></figure><p>3、启动mysql</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost bin]# ./mysqld_safe --user=mysql &amp;</span><br></pre></td></tr></table></figure><p>4、检查mysql是否启动</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost bin]# ps -ef|grep mysql</span><br></pre></td></tr></table></figure><p>发现有进程便代表启动成功。</p><p>5.进入客户端</p><p>1、登录：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost bin]# ./mysql -uroot -p</span><br><span class="line">Enter password:这里输入之前的临时密码</span><br></pre></td></tr></table></figure><p>2、修改密码：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">mysql&gt; </span><span class="language-bash"><span class="built_in">set</span> password=password(<span class="string">&#x27;新密码&#x27;</span>);</span></span><br></pre></td></tr></table></figure><h2 id="设置远程访问"><a href="#设置远程访问" class="headerlink" title="设置远程访问"></a>设置远程访问</h2><p>1、打开mysql的默认端口3306:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost bin]# firewall-cmd --zone=public --add-port=3306/tcp --permanent</span><br><span class="line">success</span><br><span class="line">[root@localhost bin]# firewall-cmd --reload</span><br><span class="line">success</span><br></pre></td></tr></table></figure><p>2、设置mysql的远程访问</p><p>设置远程访问账号:grant all privileges on . to 远程访问用户名@’%’ identified by ‘用户密码’;</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">mysql&gt; </span><span class="language-bash">grant all privileges on *.* to root@<span class="string">&#x27;%&#x27;</span> identified by <span class="string">&#x27;root&#x27;</span>;</span></span><br></pre></td></tr></table></figure><p>刷新:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">mysql&gt; </span><span class="language-bash">flush privileges;</span></span><br></pre></td></tr></table></figure><h2 id="设置开机自启动"><a href="#设置开机自启动" class="headerlink" title="设置开机自启动"></a>设置开机自启动</h2><p>1、添加服务mysql</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost bin]# chkconfig --add mysql</span><br></pre></td></tr></table></figure><p>2、设置mysql服务为自启动</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost bin]# chkconfig mysql on</span><br></pre></td></tr></table></figure><p>第八步：配置环境变量</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]# vim /etc/profile</span><br></pre></td></tr></table></figure><p>最后一行添加:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">export PATH=$JAVA_HOME/bin:/usr/local/mysql/bin:$PATH</span><br></pre></td></tr></table></figure><p>使修改生效:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]# source /etc/profile</span><br></pre></td></tr></table></figure><p>至此,mysql5.7的安装就完成了！</p><h1 id="2-Mysql-8-0-X-安装参考步骤"><a href="#2-Mysql-8-0-X-安装参考步骤" class="headerlink" title="2.Mysql 8.0.X 安装参考步骤"></a>2.Mysql 8.0.X 安装参考步骤</h1><h2 id="一、卸载MariaDB"><a href="#一、卸载MariaDB" class="headerlink" title="一、卸载MariaDB"></a>一、卸载MariaDB</h2><p>在CentOS中默认安装有MariaDB，是MySQL的一个分支，主要由开源社区维护。</p><p>CentOS 7及以上版本已经不再使用MySQL数据库，而是使用MariaDB数据库。</p><p>如果直接安装MySQL，会和MariaDB的文件冲突。</p><p>因此，需要先卸载自带的MariaDB，再安装MySQL。</p><p>1.1 查看版本：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rpm -qa|grep mariadb</span><br></pre></td></tr></table></figure><p>1.2 卸载</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rpm -e --nodeps 文件名</span><br></pre></td></tr></table></figure><p>1.3 检查是否卸载干净：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rpm -qa|grep mariadb</span><br></pre></td></tr></table></figure><h2 id="二、安装MySQL"><a href="#二、安装MySQL" class="headerlink" title="二、安装MySQL"></a>二、安装MySQL</h2><p>2.1 下载资源包</p><p>2.1.1 官网下载</p><p>MySQL官网下载地址 :</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://dev.mysql.com/downloads/mysql/</span><br></pre></td></tr></table></figure><p>2.1.2 wget下载mysql 8.0.20</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget https://dev.mysql.com/get/Downloads/MySQL-8.0/mysql-8.0.20-linux-glibc2.12-x86_64.tar.xz</span><br></pre></td></tr></table></figure><p>2.2 解压</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">.tar.gz后缀：tar -zxvf 文件名</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">.tar.xz后缀：tar -Jxvf 文件名</span><br></pre></td></tr></table></figure><p>2.3 重命名</p><p>将解压后的文件夹重命名（或者为文件夹创建软链接）</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">重命名</span></span><br><span class="line">mv 原文件夹名 mysql8</span><br></pre></td></tr></table></figure><p>2.4 添加PATH变量</p><p>添加PATH变量后，可在全局使用MySQL。</p><p>有两种添加方式：export命令临时生效、修改配置文件用久生效；</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">临时环境变量，关闭shell后失效，通常用于测试环境</span></span><br><span class="line">export PATH=$PATH:/data/software/mysql8/bin</span><br></pre></td></tr></table></figure><h2 id="三、用户和用户组"><a href="#三、用户和用户组" class="headerlink" title="三、用户和用户组"></a>三、用户和用户组</h2><p>3.1 创建用户组和用户</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">创建一个用户组：mysql</span></span><br><span class="line">groupadd mysql</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">创建一个系统用户：mysql，指定用户组为mysql</span></span><br><span class="line">useradd -r -g mysql mysql</span><br></pre></td></tr></table></figure><p>创建用户组：groupadd</p><p>创建用户：useradd</p><p>-r：创建系统用户</p><p>-g：指定用户组</p><p>3.2 数据目录</p><p>1、创建目录</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mkdir -p /data/software/mysql8/datas</span><br></pre></td></tr></table></figure><p>2、赋予权限</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">更改属主和数组</span></span><br><span class="line">chown -R mysql:mysql /data/software/mysql8/datas</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">更改模式</span></span><br><span class="line">chmod -R 750 /data/software/mysql8/datas</span><br></pre></td></tr></table></figure><h2 id="四、初始化MySQL"><a href="#四、初始化MySQL" class="headerlink" title="四、初始化MySQL"></a>四、初始化MySQL</h2><p>4.1 配置参数</p><p>在&#x2F;data&#x2F;software&#x2F;mysql8&#x2F;下，创建my.cnf配置文件，用于初始化MySQL数据库</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><span class="line">[<span class="string">mysql</span>]</span><br><span class="line"><span class="comment"># 默认字符集</span></span><br><span class="line"><span class="string">default-character-set=utf8mb4</span></span><br><span class="line">[<span class="string">client</span>]</span><br><span class="line"><span class="string">port</span>       <span class="string">=</span> <span class="number">3306</span></span><br><span class="line"><span class="string">socket</span>     <span class="string">=</span> <span class="string">/tmp/mysql.sock</span></span><br><span class="line"></span><br><span class="line">[<span class="string">mysqld</span>]</span><br><span class="line"><span class="string">port</span>       <span class="string">=</span> <span class="number">3306</span></span><br><span class="line"><span class="string">server-id</span>  <span class="string">=</span> <span class="number">3306</span></span><br><span class="line"><span class="string">user</span>       <span class="string">=</span> <span class="string">mysql</span></span><br><span class="line"><span class="string">socket</span>     <span class="string">=</span> <span class="string">/tmp/mysql.sock</span></span><br><span class="line"><span class="comment"># 安装目录</span></span><br><span class="line"><span class="string">basedir</span>    <span class="string">=</span> <span class="string">/data/software/mysql8</span></span><br><span class="line"><span class="comment"># 数据存放目录</span></span><br><span class="line"><span class="string">datadir</span>    <span class="string">=</span> <span class="string">/data/software/mysql8/datas/mysql</span></span><br><span class="line"><span class="string">log-bin</span>    <span class="string">=</span> <span class="string">/data/software/mysql8/datas/mysql/mysql-bin</span></span><br><span class="line"><span class="string">innodb_data_home_dir</span>      <span class="string">=/data/software/mysql8/datas/mysql</span></span><br><span class="line"><span class="string">innodb_log_group_home_dir</span> <span class="string">=/data/software/mysql8/datas/mysql</span></span><br><span class="line"><span class="comment">#日志及进程数据的存放目录</span></span><br><span class="line"><span class="string">log-error</span> <span class="string">=/data/software/mysql8/datas/mysql/mysql.log</span></span><br><span class="line"><span class="string">pid-file</span>  <span class="string">=/data/software/mysql8/datas/mysql/mysql.pid</span></span><br><span class="line"><span class="comment"># 服务端使用的字符集默认为8比特编码</span></span><br><span class="line"><span class="string">character-set-server=utf8mb4</span></span><br><span class="line"><span class="string">lower_case_table_names=1</span></span><br><span class="line"><span class="string">autocommit</span> <span class="string">=1</span></span><br><span class="line"> </span><br><span class="line"> <span class="comment">##################以上要修改的########################</span></span><br><span class="line"><span class="string">skip-external-locking</span></span><br><span class="line"><span class="string">key_buffer_size</span> <span class="string">=</span> <span class="string">256M</span></span><br><span class="line"><span class="string">max_allowed_packet</span> <span class="string">=</span> <span class="string">1M</span></span><br><span class="line"><span class="string">table_open_cache</span> <span class="string">=</span> <span class="number">1024</span></span><br><span class="line"><span class="string">sort_buffer_size</span> <span class="string">=</span> <span class="string">4M</span></span><br><span class="line"><span class="string">net_buffer_length</span> <span class="string">=</span> <span class="string">8K</span></span><br><span class="line"><span class="string">read_buffer_size</span> <span class="string">=</span> <span class="string">4M</span></span><br><span class="line"><span class="string">read_rnd_buffer_size</span> <span class="string">=</span> <span class="string">512K</span></span><br><span class="line"><span class="string">myisam_sort_buffer_size</span> <span class="string">=</span> <span class="string">64M</span></span><br><span class="line"><span class="string">thread_cache_size</span> <span class="string">=</span> <span class="number">128</span></span><br><span class="line">  </span><br><span class="line"><span class="comment">#query_cache_size = 128M</span></span><br><span class="line"><span class="string">tmp_table_size</span> <span class="string">=</span> <span class="string">128M</span></span><br><span class="line"><span class="string">explicit_defaults_for_timestamp</span> <span class="string">=</span> <span class="literal">true</span></span><br><span class="line"><span class="string">max_connections</span> <span class="string">=</span> <span class="number">500</span></span><br><span class="line"><span class="string">max_connect_errors</span> <span class="string">=</span> <span class="number">100</span></span><br><span class="line"><span class="string">open_files_limit</span> <span class="string">=</span> <span class="number">65535</span></span><br><span class="line">   </span><br><span class="line"><span class="string">binlog_format=mixed</span></span><br><span class="line">    </span><br><span class="line"><span class="string">binlog_expire_logs_seconds</span> <span class="string">=864000</span></span><br><span class="line">    </span><br><span class="line"><span class="comment"># 创建新表时将使用的默认存储引擎</span></span><br><span class="line"><span class="string">default_storage_engine</span> <span class="string">=</span> <span class="string">InnoDB</span></span><br><span class="line"><span class="string">innodb_data_file_path</span> <span class="string">=</span> <span class="string">ibdata1:10M:autoextend</span></span><br><span class="line"><span class="string">innodb_buffer_pool_size</span> <span class="string">=</span> <span class="string">1024M</span></span><br><span class="line"><span class="string">innodb_log_file_size</span> <span class="string">=</span> <span class="string">256M</span></span><br><span class="line"><span class="string">innodb_log_buffer_size</span> <span class="string">=</span> <span class="string">8M</span></span><br><span class="line"><span class="string">innodb_flush_log_at_trx_commit</span> <span class="string">=</span> <span class="number">1</span></span><br><span class="line"><span class="string">innodb_lock_wait_timeout</span> <span class="string">=</span> <span class="number">50</span></span><br><span class="line"><span class="string">transaction-isolation=READ-COMMITTED</span></span><br><span class="line">      </span><br><span class="line">[<span class="string">mysqldump</span>]</span><br><span class="line"><span class="string">quick</span></span><br><span class="line"><span class="string">max_allowed_packet</span> <span class="string">=</span> <span class="string">16M</span></span><br><span class="line">       </span><br><span class="line">[<span class="string">myisamchk</span>]</span><br><span class="line"><span class="string">key_buffer_size</span> <span class="string">=</span> <span class="string">256M</span></span><br><span class="line"><span class="string">sort_buffer_size</span> <span class="string">=</span> <span class="string">4M</span></span><br><span class="line"><span class="string">read_buffer</span> <span class="string">=</span> <span class="string">2M</span></span><br><span class="line"><span class="string">write_buffer</span> <span class="string">=</span> <span class="string">2M</span></span><br><span class="line">        </span><br><span class="line">[<span class="string">mysqlhotcopy</span>]</span><br><span class="line"><span class="string">interactive-timeout</span></span><br></pre></td></tr></table></figure><p>4.2 初始化</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">mysqld</span> <span class="string">--defaults-file=/data/software/mysql8/my.cnf</span> <span class="string">--basedir=/data/software/mysql8/</span> <span class="string">--datadir=/data/software/mysql8/datas/mysql</span> <span class="string">--user=mysql</span> <span class="string">--initialize-insecure</span></span><br></pre></td></tr></table></figure><p>参数（重要）</p><p>defaults-file：指定配置文件（要放在–initialize 前面）</p><p>user： 指定用户</p><p>basedir：指定安装目录</p><p>datadir：指定初始化数据目录</p><p>intialize-insecure：初始化无密码</p><p>五、启动MySQL</p><p>查看 MySQL的 bin路径下，是否包含mysqld_safe，用于后台安全启动MySQL。</p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/d551599736/picgo@master/img/20230806111414.png"></p><p>5.1 启动服务</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 完整命令</span></span><br><span class="line"><span class="string">/data/software/mysql8/bin/mysqld_safe</span> <span class="string">--defaults-file=/data/software/mysql8/my.cnf</span> <span class="string">&amp;</span></span><br><span class="line"><span class="comment"># 添加PATH变量后的命令（省略bin目录的路径）</span></span><br><span class="line"><span class="string">mysqld_safe</span> <span class="string">--defaults-file=/data/software/mysql8/my.cnf</span> <span class="string">&amp;</span></span><br></pre></td></tr></table></figure><p>查看是否启动</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ps -ef|grep mysql</span><br></pre></td></tr></table></figure><p>5.2 登录</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 无密码登录方式</span></span><br><span class="line"><span class="string">/data/software/mysql8/bin/mysql</span> <span class="string">-u</span> <span class="string">root</span> <span class="string">--skip-password</span></span><br><span class="line"><span class="comment"># 有密码登录方式（初始的随机密码在/data/mysql8_data/mysql/mysql.log下）</span></span><br><span class="line"><span class="string">mysql</span> <span class="string">-u</span> <span class="string">root</span> <span class="string">-p</span></span><br><span class="line"><span class="string">password:随机密码</span></span><br></pre></td></tr></table></figure><p>5.3 修改密码</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># 修改密码</span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">USER</span> <span class="string">&#x27;root&#x27;</span>@<span class="string">&#x27;localhost&#x27;</span> IDENTIFIED <span class="keyword">WITH</span> mysql_native_password <span class="keyword">BY</span> <span class="string">&#x27;123456&#x27;</span>;</span><br><span class="line"># 刷新权限</span><br><span class="line">FLUSH PRIVILEGES;</span><br></pre></td></tr></table></figure><p>5.4 设置允许远程登录</p><p>登录到mysql里执行</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># 修改密码</span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">USER</span> <span class="string">&#x27;root&#x27;</span>@<span class="string">&#x27;localhost&#x27;</span> IDENTIFIED <span class="keyword">WITH</span> mysql_native_password <span class="keyword">BY</span> <span class="string">&#x27;123456&#x27;</span>;</span><br><span class="line"># 刷新权限</span><br><span class="line">FLUSH PRIVILEGES;</span><br></pre></td></tr></table></figure><p>5.5 在Navicat上测试连接成功！<br><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/d551599736/picgo@master/img/20230806111650.png"></p>]]></content>
      
      
      <categories>
          
          <category> 数据库 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> mysql </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo|butterfly搜索引擎优化(SEO)</title>
      <link href="/archives/fc6989f8.html"/>
      <url>/archives/fc6989f8.html</url>
      
        <content type="html"><![CDATA[<h1 id="1-安装插件"><a href="#1-安装插件" class="headerlink" title="1.安装插件"></a>1.安装插件</h1><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo<span class="literal">-generator-baidu-sitemap</span> <span class="literal">--save</span></span><br><span class="line">npm install hexo<span class="literal">-generator-sitemap</span> <span class="literal">--save</span></span><br></pre></td></tr></table></figure><p>修改站点配置文件</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">url:</span> <span class="string">https://blog.hihahoo.com</span></span><br><span class="line"><span class="comment"># 站点地图</span></span><br><span class="line"><span class="attr">sitemap:</span></span><br><span class="line">  <span class="attr">path:</span> <span class="string">sitemap.xml</span></span><br><span class="line"><span class="attr">baidusitemap:</span></span><br><span class="line">  <span class="attr">path:</span> <span class="string">baidusitemap.xml</span></span><br></pre></td></tr></table></figure><p><code>hexo g</code> ， <code>hexo s</code> 后，可以访问 <code>localhost:4000/sitemap.xml</code> 查看站点地图。</p><h1 id="2-提交百度收录"><a href="#2-提交百度收录" class="headerlink" title="2.提交百度收录"></a>2.提交百度收录</h1><p>查看站点是否被收录。</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">site:https://blog.hihahoo.com</span><br></pre></td></tr></table></figure><p>登录百度搜索资源平台，添加站点信息</p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/d551599736/picgo@master/img/20230805215104.png"></p><p>通过上图的验证码对网站的所有权验证，建议选择验证码方式，直接修改主题配置文件</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">site_verification:</span><br><span class="line">  # - name: google-site-verification</span><br><span class="line">  #   content: xxxxxx</span><br><span class="line"> - name: baidu-site-verification</span><br><span class="line">   content: HznZlBpisgS2ytDy</span><br></pre></td></tr></table></figure><h1 id="3-新文章自动提交百度收录"><a href="#3-新文章自动提交百度收录" class="headerlink" title="3.新文章自动提交百度收录"></a>3.新文章自动提交百度收录</h1><p>安装插件</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo<span class="literal">-baidu-url-submit</span> <span class="literal">--save</span></span><br></pre></td></tr></table></figure><p>修改站点配置文件</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 主动推送百度，被百度收录</span></span><br><span class="line"><span class="attr">baidu_url_submit:</span></span><br><span class="line">  <span class="attr">count:</span> <span class="number">10</span> <span class="comment">#提交最新的10个链接</span></span><br><span class="line">  <span class="attr">host:</span> <span class="string">https://blog.hihahoo.com</span> <span class="comment"># 百度站长平台中注册的域名</span></span><br><span class="line">  <span class="attr">token:</span> <span class="string">XXXXX</span> <span class="comment">#密钥，百度站长平台 &gt; 推送接口 &gt; 接口调用地址中token 字段</span></span><br><span class="line">  <span class="attr">path:</span> <span class="string">baidu_urls.txt</span> <span class="comment">#文本文档的地址，新链接会保存在此文本文档中，不用改</span></span><br></pre></td></tr></table></figure><p>hexo d -g 的时候都会主动生成对应文件推送百度</p>]]></content>
      
      
      <categories>
          
          <category> nodejs </category>
          
      </categories>
      
      
        <tags>
            
            <tag> nodejs </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Git代码同时上传到单独仓库(github、gitee、coding)</title>
      <link href="/archives/fc6989f7.html"/>
      <url>/archives/fc6989f7.html</url>
      
        <content type="html"><![CDATA[<h1 id="1-在gitee、github、coding创建相同名字项目"><a href="#1-在gitee、github、coding创建相同名字项目" class="headerlink" title="1.在gitee、github、coding创建相同名字项目"></a>1.在gitee、github、coding创建相同名字项目</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">比如： 账号名: hihahoo 仓库名: hihahoo.github.io</span><br></pre></td></tr></table></figure><h1 id="2-关联远程仓库"><a href="#2-关联远程仓库" class="headerlink" title="2.关联远程仓库"></a>2.关联远程仓库</h1><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">git init</span><br><span class="line">git remote add gitee https://gitee.com/hihahoo/hihahoo.github.io</span><br><span class="line">git remote add github https://github.com/hihahoo/hihahoo.github.io</span><br><span class="line">git remote add coding https://coding.com/hihahoo/hihahoo.github.io</span><br></pre></td></tr></table></figure><h1 id="3-拉取github仓库代码至本地。同步代码至其他仓库"><a href="#3-拉取github仓库代码至本地。同步代码至其他仓库" class="headerlink" title="3.拉取github仓库代码至本地。同步代码至其他仓库"></a>3.拉取github仓库代码至本地。同步代码至其他仓库</h1><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">git pull github master</span><br><span class="line">From https://github.com/d551599736/d551599736.github.io</span><br><span class="line"> * branch            master     -&gt; FETCH_HEAD</span><br><span class="line">fatal: ref<span class="keyword">using</span> to merge unrelated histories  #报错</span><br><span class="line">git pull github master <span class="literal">--allow-unrelated-histories</span> <span class="comment">#添加 不用关联历史参数</span></span><br><span class="line">git push gitee master <span class="comment">#上传 gitee仓库</span></span><br><span class="line">git push coding master <span class="comment">#上传coding仓库</span></span><br><span class="line">hint: Updates were rejected because the tip of your current branch is behind</span><br><span class="line">hint: its remote counterpart. Integrate the remote changes (e.g.</span><br><span class="line">hint: <span class="string">&#x27;git pull ...&#x27;</span>) before pushing again.</span><br><span class="line">hint: See the <span class="string">&#x27;Note about fast-forwards&#x27;</span> <span class="keyword">in</span> <span class="string">&#x27;git push --help&#x27;</span> <span class="keyword">for</span> details. <span class="comment">#报错</span></span><br><span class="line">git push <span class="operator">-f</span> coding master</span><br><span class="line"><span class="comment">## 远程仓库的文件跟本地不一致，需要强制上传</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><blockquote><p>由于初始化项目，使用强制推送不会对项目造成影响，三个仓库数据代码保持一致！！！</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> git </category>
          
      </categories>
      
      
        <tags>
            
            <tag> git </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>搜索引擎优化(SEO)</title>
      <link href="/archives/fc6989f6.html"/>
      <url>/archives/fc6989f6.html</url>
      
        <content type="html"><![CDATA[<h1 id="1-SEO的概述"><a href="#1-SEO的概述" class="headerlink" title="1.SEO的概述"></a>1.SEO的概述</h1><p>SEO是 “搜索引擎优化 “的缩写。简单地说，SEO是指改进你的网站，以提高其在谷歌、微软必应和其他搜索引擎中的可见度的过程。</p><ul><li><p>SEO &#x3D; 推动来自搜索引擎的有机流量。</p><p> 优点：1）价格低廉 2）排名相对稳定 3) 无需担心恶意点击  –》 适合：长期发展</p></li><li><p>SEM &#x3D; 推动来自搜索引擎的有机和付费流量</p><p> 优点：1) 见效快 2) 范围广 3) 操作简单 –》适合: 短期营销</p><h3 id="为什么SEO很重要？"><a href="#为什么SEO很重要？" class="headerlink" title="为什么SEO很重要？"></a>为什么SEO很重要？</h3><p>SEO是一个重要的营销渠道。首先，最重要的是：有机搜索提供了所有网站流量的53%。<br>​这就是为什么全球SEO行业预计到2028年将达到惊人的1221.1亿美元的一个重要原因。SEO为各种规模的品牌、企业和组织带来了真正的商业成果。<br>无论人们想去什么地方，做什么事情，寻找信息，研究或购买产品&#x2F;服务，他们的旅程通常从搜索开始。<br>但是今天，搜索是令人难以置信的碎片化。用户可以在传统的网络搜索引擎（如谷歌、微软必应）、社交平台（如YouTube、TikTok）或零售商网站（如亚马逊）进行搜索。</p><p>​另一个原因是SEO对品牌和企业来说至关重要：与其他营销渠道不同，好的SEO工作是可持续的。当一个付费活动结束时，流量也会结束。来自社交媒体的流量充其量是不可靠的–而且是它曾经的一小部分。</p></li></ul><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/d551599736/picgo@master/img/20230804171248.png"></p><h1 id="2-SEO工作原理"><a href="#2-SEO工作原理" class="headerlink" title="2.SEO工作原理"></a>2.SEO工作原理</h1><p><strong>搜索引擎工作原理：</strong></p><ol><li><u>抓取网页</u>：搜索引擎使用爬行器，通过跟踪链接和使用网站地图来发现网络上的页面。</li><li><u>收录建库预处理</u>：把网页存至至网页数据库中和索引数据库中</li><li><u>分析搜索内容</u>：</li><li><u>对结果（网页）排序</u>：用一定的算法排序</li></ol><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/d551599736/picgo@master/img/20230805134553.png"></p><h1 id="3-SEO查询分析"><a href="#3-SEO查询分析" class="headerlink" title="3.SEO查询分析"></a>3.SEO查询分析</h1><ol><li><p>查询命令 ：site: +站点域名</p></li><li><p>通过工具查询网站SEO信息，进行分析，工具网站: <a href="https://seo.chinaz.com/%EF%BC%8C%E6%96%B0%E7%BD%91%E7%AB%99%E4%B8%80%E8%88%AC%E6%9D%83%E9%87%8D%E4%B8%BA0%EF%BC%8C%E8%BF%99%E7%A7%8D%E6%83%85%E5%86%B5%E9%9C%80%E8%A6%81%E5%81%9ASEO%E4%BC%98%E5%8C%96">https://seo.chinaz.com/，新网站一般权重为0，这种情况需要做SEO优化</a></p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/d551599736/picgo@master/img/20230805190319.png"></p></li></ol><h1 id="4-站长平台网站收录"><a href="#4-站长平台网站收录" class="headerlink" title="4.站长平台网站收录"></a>4.站长平台网站收录</h1><ol><li><p>官方搜索引擎站长平台：百度(<a href="https://ziyuan.baidu.com)、360((https//zhanzhang.so.com)%E3%80%81%E6%90%9C%E7%8B%97((https://zhanzhang.sogou.com)">https://ziyuan.baidu.com)、360((https://zhanzhang.so.com)、搜狗((https://zhanzhang.sogou.com)</a>;</p><p>​</p></li><li><p>网站添加：1）输入域名 2) 站点属性 3) 验证网站</p><p>​</p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/d551599736/picgo@master/img/20230805191021.png"></p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/d551599736/picgo@master/img/20230805191123.png"></p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/d551599736/picgo@master/img/20230805191227.png"></p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/d551599736/picgo@master/img/20230805191504.png"></p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/d551599736/picgo@master/img/20230805191931.png"></p></li><li><p>网站普通收录：1）sitemap 2)手动提交</p><p>sitemap方式：通过在网站根目录新建sitemap.xml文件，百度批量收录xml文件内的地址；</p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/d551599736/picgo@master/img/20230805194222.png"></p><p>手动提交方式：通过填写需要收录的网站地址，发送给百度收录；</p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/d551599736/picgo@master/img/20230805194315.png"></p><p>​</p></li></ol><h1 id="5-关键词"><a href="#5-关键词" class="headerlink" title="5.关键词"></a>5.关键词</h1><ol><li><p>关键词的组成 ： 核心关键词 + 长尾关键词</p><p>​                      （  白内障手术 ） ( 白内障的早期症状、多少钱…..)</p></li><li><p>关键词的选择：1）头脑风暴选择优选关键词</p><p>​   2）通过同行页面参考keywords元数据</p><p>​   3)   通过百度相关搜索筛选出来</p></li><li><p>挖掘工具：百度推广 –关键词规划师、站长工具、爱站关键词挖掘、百度指数</p></li></ol><h1 id="6-URL的修改"><a href="#6-URL的修改" class="headerlink" title="6.URL的修改"></a>6.URL的修改</h1><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/d551599736/picgo@master/img/20230805200335.png"></p><blockquote><p>文章的地址最好是固定的一串数字地址，不会根据目录更改导致链接的改变！</p></blockquote><h1 id="7-标题-元数据"><a href="#7-标题-元数据" class="headerlink" title="7.标题 元数据"></a>7.标题 元数据</h1><p>title 标签的作用：突出本页面<strong>核心关键词</strong>，在页面优化工作中非常重要</p><blockquote><p>字符控制80个以内，关键词最好3个以内。</p></blockquote><h1 id="8-description-元数据"><a href="#8-description-元数据" class="headerlink" title="8.description 元数据"></a>8.description 元数据</h1><p>描述页面内容简介，让搜索引擎判断页面内容，一般不能超过200个字符。</p><blockquote><p>desc标签跟页面核心关键词保持一致</p></blockquote><h1 id="9-keywords-元数据"><a href="#9-keywords-元数据" class="headerlink" title="9.keywords 元数据"></a>9.keywords 元数据</h1><p>让搜索引擎来调整关键词密度，一般不能超过100个字符。</p><blockquote><p>关键词最好3个以内。</p></blockquote><h1 id="10-关键词布局跟密度"><a href="#10-关键词布局跟密度" class="headerlink" title="10 关键词布局跟密度"></a>10 关键词布局跟密度</h1><p>关键词页面布局 一般 呈现初 F形状</p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/d551599736/picgo@master/img/20230805202610.png"></p><blockquote><p>图片型网页不适合页面关键词布局</p></blockquote><p>关键词密度，查询网址：<a href="http://tool.chinaz.com/Tools/Density.aspx">http://tool.chinaz.com/Tools/Density.aspx</a></p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/d551599736/picgo@master/img/20230805202546.png"></p><blockquote><p>密度最好在2%~8%，不然搜索引擎默认堆砌关键词作弊行为，会降级处理</p></blockquote><h1 id="11-网站结构原则"><a href="#11-网站结构原则" class="headerlink" title="11.网站结构原则"></a>11.网站结构原则</h1><p>网站结构图：首页— 频道 — 栏目 — 页面(内页)</p><p>优化原则：最多点击3次导航地址，查看到最终页面</p><h1 id="12-内链、页面优化"><a href="#12-内链、页面优化" class="headerlink" title="12.内链、页面优化"></a>12.内链、页面优化</h1><p>内链：同一网站域名下的内页(内容页面)之间的互相地址链接。</p><p>内页优化：1）内聚内链、内页的质量 –》提高用户粘性</p><pre><code>          2）四处一词（标题、keywords以及desc、内容密度、锚文本[超链接]） 实现**长尾关键词**的排名效果</code></pre><h1 id="13-标签的使用"><a href="#13-标签的使用" class="headerlink" title="13.标签的使用"></a>13.标签的使用</h1><p>h1、strong、alt 也会被SEO解析</p><h1 id="14-SEO链轮"><a href="#14-SEO链轮" class="headerlink" title="14.SEO链轮"></a>14.SEO链轮</h1><p>通过各大门户网站博客指向需要优化的目标网站，达到引流提升搜索排名。</p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/d551599736/picgo@master/img/20230805210331.png"></p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/d551599736/picgo@master/img/20230805210253.png"></p><h1 id="15-外链增加方法"><a href="#15-外链增加方法" class="headerlink" title="15.外链增加方法"></a>15.外链增加方法</h1><p>1） 友情链接 2) 论坛外链：帖子内容、帖子回复 3） 博客评论</p><blockquote><p>外链还可以通过卖: 爱链网</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> nodejs </category>
          
      </categories>
      
      
        <tags>
            
            <tag> nodejs </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo主题butterfly集成评论功能（twikoo）</title>
      <link href="/archives/fc6989f5.html"/>
      <url>/archives/fc6989f5.html</url>
      
        <content type="html"><![CDATA[<h1 id="1-twikoo部署"><a href="#1-twikoo部署" class="headerlink" title="1. twikoo部署"></a>1. twikoo部署</h1><p>Twikoo 是一个简洁、安全、无后端的静态网站评论系统，基于腾讯云开发；</p><h2 id="云函数部署"><a href="#云函数部署" class="headerlink" title="云函数部署"></a>云函数部署</h2><table><thead><tr><th>部署方式</th><th>推荐度</th><th>描述</th></tr></thead><tbody><tr><td>腾讯云一键部署</td><td>★☆☆☆☆</td><td>虽然方便，但是仅支持按量计费环境——也就是说，一键部署的环境，当免费资源用尽后，将会产生费用。且按量计费环境无法切换为包年包月环境。免费额度数据库读操作数只有 500 次 &#x2F; 天，无法支撑 Twikoo 的运行需求。</td></tr><tr><td>腾讯云手动部署</td><td>★★☆☆☆</td><td>手动部署到腾讯云云开发环境，在中国大陆访问速度较快。需要付费购买环境才能部署。</td></tr><tr><td>腾讯云命令行部署</td><td>★☆☆☆☆</td><td>仅针对有 Node.js 经验的开发者。</td></tr><tr><td>Vercel 部署</td><td>★★★☆☆</td><td>适用于想要免费部署的用户，在中国大陆访问速度较慢甚至无法访问，绑定自己的域名可以提高访问速度。</td></tr><tr><td>Railway 部署</td><td>★★☆☆☆</td><td>有免费额度但不足以支持一个月连续运行，部署简单，适合全球访问。</td></tr><tr><td>Zeabur 部署</td><td>★★★★☆</td><td>有充足的免费额度，但需要绑定支付宝或信用卡，部署简单，适合中国大陆访问。</td></tr><tr><td>私有部署</td><td>★★☆☆☆</td><td>适用于有服务器的用户，需要自行申请 HTTPS 证书。</td></tr><tr><td>私有部署 (Docker)</td><td>★★★☆☆</td><td>适用于有服务器的用户，需要自行申请 HTTPS 证书。</td></tr></tbody></table><p>根据官网文档，咱们选择zeabur云服务部署。</p><ol><li><p>在 <a href="https://dash.zeabur.com/">Zeaburopen in new window</a> 申请并登录账号，点击部署新服务 - 部署其他服务 - 部署 MongoDB，名称随意</p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/d551599736/picgo@master/img/GIF%202023-8-2%2019-35-02.gif"></p></li><li><p>打开 <a href="https://github.com/imaegoo/twikoo-zeabur">imaegoo&#x2F;twikoo-zeaburopen </a> 点击 fork 将仓库 fork 到自己的账号下</p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/d551599736/picgo@master/img/20230802204850.png"></p></li><li><p>在zeabur关联github账号登录，方便zeabur拉取仓库代码自动部署,回到 Zeabur 点击部署新服务 - 部署你的源代码 - 授权 GitHub - 选择刚才 fork 的仓库，名称随意，再点击生成域名，这域名是配置文件的envId.</p><p>​</p></li></ol><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/d551599736/picgo@master/img/20230802204954.png"></p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/d551599736/picgo@master/img/GIF%202023-8-2%2019-41-58.gif"></p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/d551599736/picgo@master/img/20230803190402.png"></p><h1 id="2-hexo集成评论功能"><a href="#2-hexo集成评论功能" class="headerlink" title="2.hexo集成评论功能"></a>2.hexo集成评论功能</h1><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/d551599736/picgo@master/img/hexo%E6%9E%B6%E6%9E%84%E5%9B%BE.png"></p><p>添加以下配置到主题配置文件_config.butterfly.yml 上</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Twikoo</span></span><br><span class="line"><span class="comment"># https://github.com/imaegoo/twikoo</span></span><br><span class="line"><span class="attr">twikoo:</span></span><br><span class="line">  <span class="attr">envId:</span> <span class="string">https://XXX.zeabur.app</span> <span class="comment"># 这是zeabur twikoo服务填写的域名</span></span><br><span class="line">  <span class="attr">region:</span></span><br><span class="line">  <span class="attr">visitor:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">option:</span></span><br></pre></td></tr></table></figure><h1 id="3-避坑姿势"><a href="#3-避坑姿势" class="headerlink" title="3. 避坑姿势"></a>3. 避坑姿势</h1><ol><li><p>为什么集成之后，填写好评论提交失败(评论显示评论失败：0)</p><p>答： 重新创建mongodb、twikoo服务</p><p>​</p></li></ol>]]></content>
      
      
      <categories>
          
          <category> nodejs </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
            <tag> nodejs </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo主题butterfly音乐全局吸底教程</title>
      <link href="/archives/fc6989f4.html"/>
      <url>/archives/fc6989f4.html</url>
      
        <content type="html"><![CDATA[<h1 id="1-安装hexo插件"><a href="#1-安装hexo插件" class="headerlink" title="1.安装hexo插件"></a>1.安装hexo插件</h1><p>音乐界面使用了插件 <code>hexo-tag-aplayer</code></p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install <span class="literal">--save</span> hexo<span class="literal">-tag-aplayer</span></span><br></pre></td></tr></table></figure><h1 id="2-配置配置文件"><a href="#2-配置配置文件" class="headerlink" title="2.配置配置文件"></a>2.配置配置文件</h1><p>首先在Hexo根目录_config里配置asset_inject为false</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">aplayer:</span></span><br><span class="line">  <span class="attr">meting:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">asset_inject:</span> <span class="literal">false</span></span><br></pre></td></tr></table></figure><p>在主题的配置文件中，enable 设为 true 和 per_page 设为 true</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">aplayerInject:</span><br><span class="line">  enable: true</span><br><span class="line">  per_page: true</span><br></pre></td></tr></table></figure><h1 id="3-添加全局吸底Aplayer"><a href="#3-添加全局吸底Aplayer" class="headerlink" title="3.添加全局吸底Aplayer"></a>3.添加全局吸底Aplayer</h1><p>把 aplayer代码 插入到主题配置文件的 inject.bottom 去</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">inject:</span></span><br><span class="line">  <span class="attr">head:</span></span><br><span class="line">    <span class="comment"># - &lt;link rel=&quot;stylesheet&quot; href=&quot;/xxx.css&quot;&gt;</span></span><br><span class="line">  <span class="attr">bottom:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">&lt;div</span> <span class="string">class=&quot;aplayer</span> <span class="literal">no</span><span class="string">-destroy&quot;</span> <span class="string">data-id=&quot;60198&quot;</span> <span class="string">data-server=&quot;netease&quot;</span> <span class="string">data-type=&quot;playlist&quot;</span> <span class="string">data-fixed=&quot;true&quot;</span> <span class="string">data-autoplay=&quot;true&quot;&gt;</span> <span class="string">&lt;/div&gt;</span></span><br></pre></td></tr></table></figure><p>如果你想切换页面时，音乐不会中断,修改主题配置文件如下：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">pjax:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure><h1 id="4-文章添加播放器"><a href="#4-文章添加播放器" class="headerlink" title="4. 文章添加播放器"></a>4. 文章添加播放器</h1><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% meting &quot;2063487880&quot; &quot;netease&quot; &quot;song&quot; &quot;theme:#555&quot; &quot;mutex:true&quot; &quot;listmaxheight:340px&quot; &quot;preload:auto&quot; %&#125;</span><br></pre></td></tr></table></figure><p>有关参数描述如下：</p><table><thead><tr><th>选项</th><th>默认值</th><th>描述</th></tr></thead><tbody><tr><td>id</td><td>必须值</td><td>歌曲 id &#x2F; 播放列表 id &#x2F; 相册 id &#x2F; 搜索关键字</td></tr><tr><td>server</td><td>必须值</td><td>音乐平台: netease, tencent, kugou, xiami, baidu</td></tr><tr><td>type</td><td>必须值</td><td>song, playlist, album, search, artist</td></tr><tr><td>fixed</td><td>false</td><td>开启固定模式</td></tr><tr><td>mini</td><td>false</td><td>开启迷你模式</td></tr><tr><td>loop</td><td>all</td><td>列表循环模式：all, one,none</td></tr><tr><td>order</td><td>list</td><td>列表播放模式： list, random</td></tr><tr><td>volume</td><td>0.7</td><td>播放器音量</td></tr><tr><td>lrctype</td><td>0</td><td>歌词格式类型</td></tr><tr><td>listfolded</td><td>false</td><td>指定音乐播放列表是否折叠</td></tr><tr><td>storagename</td><td>metingjs</td><td>LocalStorage 中存储播放器设定的键名</td></tr><tr><td>autoplay</td><td>true</td><td>自动播放，移动端浏览器暂时不支持此功能</td></tr><tr><td>mutex</td><td>true</td><td>该选项开启时，如果同页面有其他 aplayer 播放，该播放器会暂停</td></tr><tr><td>listmaxheight</td><td>340px</td><td>播放列表的最大长度</td></tr><tr><td>preload</td><td>auto</td><td>音乐文件预载入模式，可选项： none, metadata, auto</td></tr><tr><td>theme</td><td>#ad7a86</td><td>播放器风格色彩设置</td></tr></tbody></table><h1 id="5-创建音乐页面"><a href="#5-创建音乐页面" class="headerlink" title="5. 创建音乐页面"></a>5. 创建音乐页面</h1><p>希望在导航条添加音乐页面链接</p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/d551599736/picgo@master/img/20230802145711.png"></p><ol><li><p>在命令行执行新建music页面命令：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new page music</span><br></pre></td></tr></table></figure><p>​</p></li><li><p>执行完命令之后，&#x2F;source 文件夹下会生成一个music文件夹，打开里面的index.md，修改如下：</p></li></ol><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">title: 音乐</span><br><span class="line">date: 2023-08-02 06:55:16</span><br><span class="line">type: &quot;music&quot;</span><br></pre></td></tr></table></figure><ol start="3"><li>新建菜单的音乐链接</li></ol><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">menu:</span></span><br><span class="line">   <span class="string">主页:</span> <span class="string">/</span> <span class="string">||</span> <span class="string">fas</span> <span class="string">fa-home</span></span><br><span class="line">   <span class="string">归档:</span> <span class="string">/archives/</span> <span class="string">||</span> <span class="string">fas</span> <span class="string">fa-archive</span></span><br><span class="line">   <span class="string">标签:</span> <span class="string">/tags/</span> <span class="string">||</span> <span class="string">fas</span> <span class="string">fa-tags</span></span><br><span class="line">   <span class="string">分类:</span> <span class="string">/categories/</span> <span class="string">||</span> <span class="string">fas</span> <span class="string">fa-folder-open</span></span><br><span class="line">   <span class="string">音乐:</span> <span class="string">/music/</span> <span class="string">||</span> <span class="string">fas</span> <span class="string">fa-music</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> nodejs </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
            <tag> nodejs </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>基于Hexo构建免费的个人博客</title>
      <link href="/archives/fc6989f1.html"/>
      <url>/archives/fc6989f1.html</url>
      
        <content type="html"><![CDATA[<h1 id="1-软件安装"><a href="#1-软件安装" class="headerlink" title="1.软件安装"></a>1.软件安装</h1><p><strong>博客网站开发框架</strong>： <strong>nodejs</strong> –&gt;<strong>hexo</strong> –&gt; <strong>butterfly</strong></p><p>hexo这个框架基于hodejs开发的，hexo可以根据不同的主题生成不同风格的博客静态网站；</p><p><strong>开发环境工具</strong>：<strong>git</strong> –&gt;<strong>vscode –&gt;</strong> <strong>github、gitee</strong></p><p>通过git版本管理工具管理github或者gitee平台上的hexo生成的网站代码，开启github&#x2F;gitee平台的pages(网站)功能，免费发布个人博客。</p><h1 id="2-安装Hexo，配置网站信息"><a href="#2-安装Hexo，配置网站信息" class="headerlink" title="2. 安装Hexo，配置网站信息"></a>2. 安装Hexo，配置网站信息</h1><p>1.安装hexo脚手架</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo<span class="literal">-cli</span> <span class="literal">-g</span></span><br><span class="line">hexo init blog</span><br><span class="line"><span class="built_in">cd</span> blog</span><br><span class="line">npm install</span><br><span class="line">hexo server</span><br></pre></td></tr></table></figure><p>2.配置根目录的  _ config.xml，修改网站资料(区分于主题配置文件 _config.butterfly.yml )</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Site</span></span><br><span class="line"><span class="attr">title:</span> <span class="comment"># 网站标题 主页标语 导航的标题</span></span><br><span class="line"><span class="attr">subtitle:</span> <span class="string">&#x27;&#x27;</span></span><br><span class="line"><span class="attr">description:</span> <span class="comment"># 个人标签的描述</span></span><br><span class="line"><span class="attr">keywords:</span> <span class="comment">#</span></span><br><span class="line"><span class="attr">author:</span> <span class="comment"># 作者</span></span><br><span class="line"><span class="attr">language:</span> <span class="comment"># 国际化</span></span><br><span class="line"><span class="attr">timezone:</span> <span class="string">&#x27;&#x27;</span></span><br><span class="line"><span class="attr">email:</span> <span class="comment">#邮箱</span></span><br></pre></td></tr></table></figure><h1 id="3-集成配置主题butterfly"><a href="#3-集成配置主题butterfly" class="headerlink" title="3.集成配置主题butterfly"></a>3.集成配置主题butterfly</h1><p>1.修改Hexo根目录下的<u>_config.yml</u>,把主题改为<u>butterfly</u></p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">theme:</span> <span class="string">butterfly</span></span><br></pre></td></tr></table></figure><p>2.如果你沒有 pug 以及 stylus 的渲染器，下载安裝：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo<span class="literal">-renderer-pug</span> hexo<span class="literal">-renderer-stylus</span> <span class="literal">--save</span></span><br></pre></td></tr></table></figure><p>3.在hexo跟目录下，把主题butterfly拉取至hexo项目themes目录, 升級方法：在主題目录下，運行 git pull</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone <span class="literal">-b</span> master https://github.com/jerryc127/hexo<span class="literal">-theme-butterfly</span>.git themes/butterfly</span><br></pre></td></tr></table></figure><p>目录结构：</p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/d551599736/picgo@master/img/20230726202728.png"></p><p>4.在 hexo 的根目录创建一个文件 _config.butterfly.yml，并把主题目录的 _config.yml 內容复制到 _config.butterfly.yml 去。( 注意: 复制的是主题的 _config.yml ，而不是 hexo 的 _config.yml)【cp themes&#x2F;butterfly&#x2F;_config.yml _config.butterfly.yml】</p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/d551599736/picgo@master/img/20230726210551.png"></p><h1 id="4-配置主题配置文件"><a href="#4-配置主题配置文件" class="headerlink" title="4.配置主题配置文件"></a>4.配置主题配置文件</h1><p>1.按自己需求在<code>_config.butterfly.yml </code>文件更改配置内容（官网配置：<a href="https://butterfly.js.org/posts/4aa8abbe/%EF%BC%89">https://butterfly.js.org/posts/4aa8abbe/）</a></p><table><thead><tr><th align="center">配置内容</th><th align="center">网站对应效果</th></tr></thead><tbody><tr><td align="center"><strong>1.语言</strong></td><td align="center">网站文字</td></tr><tr><td align="center"><strong>2. 网站资料</strong></td><td align="center"><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/d551599736/picgo@master/img/20230728160700.png">{width&#x3D;30%;height&#x3D;auto}</td></tr><tr><td align="center"><strong>3. 导航栏设置</strong></td><td align="center"><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/d551599736/picgo@master/img/20230728161106.png"></td></tr><tr><td align="center"><strong>4. 代码</strong></td><td align="center"><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/d551599736/picgo@master/img/20230728161148.png"></td></tr><tr><td align="center"><strong>5. 社交图标</strong></td><td align="center"><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/d551599736/picgo@master/img/20230728161217.png"></td></tr><tr><td align="center"><strong>6. 顶部图、文章封面</strong></td><td align="center"><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/d551599736/picgo@master/img/20230728161708.png"></td></tr><tr><td align="center"><strong>7. 页面meta显示</strong></td><td align="center"><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/d551599736/picgo@master/img/20230728161805.png"></td></tr><tr><td align="center"><strong>8. 主页文章节选</strong></td><td align="center"><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/d551599736/picgo@master/img/20230728161905.png"></td></tr><tr><td align="center"><strong>9. 页面锚点</strong></td><td align="center"><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/d551599736/picgo@master/img/20230728162134.png"></td></tr><tr><td align="center"><strong>10. 图片描述</strong></td><td align="center"><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/d551599736/picgo@master/img/hexo-theme-butterfly-docs-photo-figcaption.png"></td></tr><tr><td align="center"><strong>11. 复制相关配置</strong></td><td align="center"><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/d551599736/picgo@master/img/20230728162408.png"></td></tr><tr><td align="center"><strong>12. 文章页相关配置</strong></td><td align="center"><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/d551599736/picgo@master/img/20230728175416.png"></td></tr><tr><td align="center"><strong>13. Footer 设置</strong></td><td align="center"><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/d551599736/picgo@master/img/20230728175559.png"></td></tr><tr><td align="center"><strong>14. 侧边栏设置</strong></td><td align="center"><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/d551599736/picgo@master/img/20230728175703.png"></td></tr><tr><td align="center"><strong>15. 右下角按钮</strong></td><td align="center"><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/d551599736/picgo@master/img/20230728180825.png"></td></tr><tr><td align="center"><strong>16. 标签外挂</strong></td><td align="center"><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/d551599736/picgo@master/img/20230728180727.png"></td></tr><tr><td align="center"></td><td align="center"></td></tr></tbody></table><h1 id="5-高级配置主题配置文件"><a href="#5-高级配置主题配置文件" class="headerlink" title="5.高级配置主题配置文件"></a>5.高级配置主题配置文件</h1><p>1.按需求在<code>_config.butterfly.yml</code>文件添加对应功能配置（官网配置: <a href="https://butterfly.js.org/posts/ceeb73f/%EF%BC%89">https://butterfly.js.org/posts/ceeb73f/）</a></p><table><thead><tr><th align="center">配置内容</th><th align="center">网站对应效果</th></tr></thead><tbody><tr><td align="center"><strong>搜索</strong></td><td align="center"><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/d551599736/picgo@master/img/20230729204051.png"></td></tr><tr><td align="center"><strong>分享</strong></td><td align="center"><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/d551599736/picgo@master/img/20230729204352.png"></td></tr><tr><td align="center"><strong>评论</strong></td><td align="center"><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/d551599736/picgo@master/img/20230729204508.png"></td></tr><tr><td align="center"><strong>美化&#x2F;特效</strong></td><td align="center"><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/d551599736/picgo@master/img/20230801203724.png"></td></tr><tr><td align="center"><strong>数字统计</strong></td><td align="center"><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/d551599736/picgo@master/img/20230801214310.png"></td></tr><tr><td align="center">图片放大器</td><td align="center"><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/d551599736/picgo@master/img/medium_zoom.gif"></td></tr><tr><td align="center"></td><td align="center"></td></tr><tr><td align="center"></td><td align="center"></td></tr></tbody></table><h1 id="6-新建github仓库，激活-pages"><a href="#6-新建github仓库，激活-pages" class="headerlink" title="6.新建github仓库，激活 pages"></a>6.新建github仓库，激活 pages</h1><p>1.URL 规则发布用户站点，必须要先建立仓库（repository），仓库名<strong>必须</strong>与用户名保持一致，即<code>&lt;username&gt;.github.io</code></p><p>2.在仓库的设置界面，选择需要作为内容发布的分支，激活pages，如下图：</p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/d551599736/picgo@master/img/20230801200525.png"></p><p>3.主题配置文件需要配置如下：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">deploy:</span></span><br><span class="line"> <span class="bullet">-</span>  <span class="attr">type:</span> <span class="string">git</span></span><br><span class="line">    <span class="attr">repo:</span> <span class="string">https://github.com/&lt;username&gt;/&lt;username&gt;.github.io.git</span></span><br><span class="line">    <span class="attr">branch:</span> <span class="string">master</span></span><br><span class="line"> <span class="bullet">-</span>  <span class="attr">type:</span> <span class="string">baidu_url_submitter</span> <span class="comment"># seo检索优化</span></span><br></pre></td></tr></table></figure><p>通过<code>hexo depoly</code>命令把public推到github的master分支上：</p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/d551599736/picgo@master/img/20230801201817.png"></p><p>4.申请域名，挂载在你的github pages网址上；</p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/d551599736/picgo@master/img/20230802072422.png"></p>]]></content>
      
      
      <categories>
          
          <category> nodejs </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
            <tag> nodejs </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CentOS7下安装JDK1.8详细过程</title>
      <link href="/archives/fc6989f3.html"/>
      <url>/archives/fc6989f3.html</url>
      
        <content type="html"><![CDATA[<h1 id="CentOS7下安装JDK1-8详细过程"><a href="#CentOS7下安装JDK1-8详细过程" class="headerlink" title="CentOS7下安装JDK1.8详细过程"></a><a href="https://so.csdn.net/so/search?q=CentOS7&spm=1001.2101.3001.7020">CentOS7</a>下安装JDK1.8详细过程</h1><h2 id="1-卸载系统自带的OpenJDK以及相关的java文件"><a href="#1-卸载系统自带的OpenJDK以及相关的java文件" class="headerlink" title="1. 卸载系统自带的OpenJDK以及相关的java文件"></a><em><strong>1. 卸载系统自带的OpenJDK以及相关的java文件</strong></em></h2><p>1.1 查看系统是否自带JDK </p><p>键入命令 java -version</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">java -version</span><br></pre></td></tr></table></figure><p>1.2 查看相关java文件</p><p>键入命令 rpm -qa | grep java</p><p>1.3 删除相关文件</p><p>首先键入命令 su root 输入密码获取root权限，然后将上一步中带<a href="https://so.csdn.net/so/search?q=openjdk&spm=1001.2101.3001.7020">openjdk</a>的文件全部删除，具体根据你安装的版本不同，文件也不尽相同，这里以上一步中的文件为例。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">rpm -e --nodeps java-1.8.0-openjdk-headless-1.8.0.65-3.b17.el7.x86_64</span><br><span class="line">rpm -e --nodeps java-1.8.0-openjdk-1.8.0.65-3.b17.el7.x86_64</span><br></pre></td></tr></table></figure><p>1.4 查看删除结果</p><p>再次键入命令 java -version 出现以下结果表示删除成功</p><h2 id="2-下载JDK"><a href="#2-下载JDK" class="headerlink" title="2. 下载JDK"></a><strong>2. 下载JDK</strong></h2><p>下载地址<a href="http://www.oracle.com/technetwork/java/javase/downloads/index.html">http://www.oracle.com/technetwork/java/javase/downloads/index.html</a></p><p>往下来拉找到jdk1.8版本的下载地址，点击下载对应的tar.gz文件</p><p>在home下的下载中找到下好的文件，此时文件所在的目录为&#x2F;home&#x2F;你的主机名字&#x2F;下载</p><p>键入命令 cp jdk-8u211-linux-x64.tar.gz &#x2F;usr&#x2F;java1.8 将文件复制到&#x2F;usr 下重命名为java1.8</p><p>这一步需要root权限，没有权限需要先键入命令su root 获取权限</p><h2 id="3-解压安装JDK"><a href="#3-解压安装JDK" class="headerlink" title="3. 解压安装JDK"></a><strong>3. 解压安装JDK</strong></h2><p>键入命令 cd &#x2F;usr 来到刚才的复制文件处，键入命令tar -zxvf java1.8 进行解压 解压效果如下</p><h2 id="4-配置JDK环境变量"><a href="#4-配置JDK环境变量" class="headerlink" title="4. 配置JDK环境变量"></a><strong>4. 配置JDK环境变量</strong></h2><p>键入命令 vim &#x2F;etc&#x2F;profile 修改配置文件，记得要在root权限下修改</p><p>输入i进入编辑状态，然后将光标移到最后一行，粘贴如下内容，JAVA_HOME&#x3D;&#x2F;usr&#x2F;jdk1.8.0_211 要根据自己的解压目录设置</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">java environment</span></span><br><span class="line">export JAVA_HOME=/usr/jdk1.8.0_211</span><br><span class="line">export CLASSPATH=.:$&#123;JAVA_HOME&#125;/jre/lib/rt.jar:$&#123;JAVA_HOME&#125;/lib/dt.jar:$&#123;JAVA_HOME&#125;/lib/tools.jar</span><br><span class="line">export PATH=$PATH:$&#123;JAVA_HOME&#125;/bin</span><br></pre></td></tr></table></figure><p>点击esc 进入命令模式 输入：wq! 保存修改信息</p><p>然后键入命令source &#x2F;etc&#x2F;profile 使配置文件生效</p><h2 id="5-测试安装效果"><a href="#5-测试安装效果" class="headerlink" title="5. 测试安装效果"></a><strong>5. 测试安装效果</strong></h2><p>键入命令 java -version 得到如下结果 表示安装成功</p>]]></content>
      
      
      <categories>
          
          <category> java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> jdk </tag>
            
            <tag> centos </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
